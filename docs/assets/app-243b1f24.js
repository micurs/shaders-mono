(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))i(o);new MutationObserver(o=>{for(const n of o)if(n.type==="childList")for(const s of n.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function r(o){const n={};return o.integrity&&(n.integrity=o.integrity),o.referrerPolicy&&(n.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?n.credentials="include":o.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(o){if(o.ep)return;o.ep=!0;const n=r(o);fetch(o.href,n)}})();var Gt=Object.defineProperty,Bt=(e,t,r)=>t in e?Gt(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,C=(e,t,r)=>(Bt(e,typeof t!="symbol"?t+"":t,r),r),it=1e-6,F=typeof Float32Array<"u"?Float32Array:Array;Math.hypot||(Math.hypot=function(){for(var e=0,t=arguments.length;t--;)e+=arguments[t]*arguments[t];return Math.sqrt(e)});function xt(){var e=new F(9);return F!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[5]=0,e[6]=0,e[7]=0),e[0]=1,e[4]=1,e[8]=1,e}function Dt(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[4],e[4]=t[5],e[5]=t[6],e[6]=t[8],e[7]=t[9],e[8]=t[10],e}function O(){var e=new F(16);return F!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0),e[0]=1,e[5]=1,e[10]=1,e[15]=1,e}function U(e){var t=new F(16);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t}function Et(e,t,r,i,o,n,s,a,c,u,l,h,d,f,v,m){var p=new F(16);return p[0]=e,p[1]=t,p[2]=r,p[3]=i,p[4]=o,p[5]=n,p[6]=s,p[7]=a,p[8]=c,p[9]=u,p[10]=l,p[11]=h,p[12]=d,p[13]=f,p[14]=v,p[15]=m,p}function lt(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function Rt(e,t){if(e===t){var r=t[1],i=t[2],o=t[3],n=t[6],s=t[7],a=t[11];e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=r,e[6]=t[9],e[7]=t[13],e[8]=i,e[9]=n,e[11]=t[14],e[12]=o,e[13]=s,e[14]=a}else e[0]=t[0],e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=t[1],e[5]=t[5],e[6]=t[9],e[7]=t[13],e[8]=t[2],e[9]=t[6],e[10]=t[10],e[11]=t[14],e[12]=t[3],e[13]=t[7],e[14]=t[11],e[15]=t[15];return e}function T(e,t){var r=t[0],i=t[1],o=t[2],n=t[3],s=t[4],a=t[5],c=t[6],u=t[7],l=t[8],h=t[9],d=t[10],f=t[11],v=t[12],m=t[13],p=t[14],x=t[15],L=r*a-i*s,M=r*c-o*s,g=r*u-n*s,_=i*c-o*a,y=i*u-n*a,q=o*u-n*c,k=l*m-h*v,W=l*p-d*v,Z=l*x-f*v,K=h*p-d*m,Q=h*x-f*m,J=d*x-f*p,z=L*J-M*Q+g*K+_*Z-y*W+q*k;return z?(z=1/z,e[0]=(a*J-c*Q+u*K)*z,e[1]=(o*Q-i*J-n*K)*z,e[2]=(m*q-p*y+x*_)*z,e[3]=(d*y-h*q-f*_)*z,e[4]=(c*Z-s*J-u*W)*z,e[5]=(r*J-o*Z+n*W)*z,e[6]=(p*g-v*q-x*M)*z,e[7]=(l*q-d*g+f*M)*z,e[8]=(s*Q-a*Z+u*k)*z,e[9]=(i*Z-r*Q-n*k)*z,e[10]=(v*y-m*g+x*L)*z,e[11]=(h*g-l*y-f*L)*z,e[12]=(a*W-s*K-c*k)*z,e[13]=(r*K-i*W+o*k)*z,e[14]=(m*M-v*_-p*L)*z,e[15]=(l*_-h*M+d*L)*z,e):null}function ht(e,t,r){var i=t[0],o=t[1],n=t[2],s=t[3],a=t[4],c=t[5],u=t[6],l=t[7],h=t[8],d=t[9],f=t[10],v=t[11],m=t[12],p=t[13],x=t[14],L=t[15],M=r[0],g=r[1],_=r[2],y=r[3];return e[0]=M*i+g*a+_*h+y*m,e[1]=M*o+g*c+_*d+y*p,e[2]=M*n+g*u+_*f+y*x,e[3]=M*s+g*l+_*v+y*L,M=r[4],g=r[5],_=r[6],y=r[7],e[4]=M*i+g*a+_*h+y*m,e[5]=M*o+g*c+_*d+y*p,e[6]=M*n+g*u+_*f+y*x,e[7]=M*s+g*l+_*v+y*L,M=r[8],g=r[9],_=r[10],y=r[11],e[8]=M*i+g*a+_*h+y*m,e[9]=M*o+g*c+_*d+y*p,e[10]=M*n+g*u+_*f+y*x,e[11]=M*s+g*l+_*v+y*L,M=r[12],g=r[13],_=r[14],y=r[15],e[12]=M*i+g*a+_*h+y*m,e[13]=M*o+g*c+_*d+y*p,e[14]=M*n+g*u+_*f+y*x,e[15]=M*s+g*l+_*v+y*L,e}function j(e,t,r){var i=r[0],o=r[1],n=r[2],s,a,c,u,l,h,d,f,v,m,p,x;return t===e?(e[12]=t[0]*i+t[4]*o+t[8]*n+t[12],e[13]=t[1]*i+t[5]*o+t[9]*n+t[13],e[14]=t[2]*i+t[6]*o+t[10]*n+t[14],e[15]=t[3]*i+t[7]*o+t[11]*n+t[15]):(s=t[0],a=t[1],c=t[2],u=t[3],l=t[4],h=t[5],d=t[6],f=t[7],v=t[8],m=t[9],p=t[10],x=t[11],e[0]=s,e[1]=a,e[2]=c,e[3]=u,e[4]=l,e[5]=h,e[6]=d,e[7]=f,e[8]=v,e[9]=m,e[10]=p,e[11]=x,e[12]=s*i+l*o+v*n+t[12],e[13]=a*i+h*o+m*n+t[13],e[14]=c*i+d*o+p*n+t[14],e[15]=u*i+f*o+x*n+t[15]),e}function Ut(e,t,r){var i=r[0],o=r[1],n=r[2];return e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e[3]=t[3]*i,e[4]=t[4]*o,e[5]=t[5]*o,e[6]=t[6]*o,e[7]=t[7]*o,e[8]=t[8]*n,e[9]=t[9]*n,e[10]=t[10]*n,e[11]=t[11]*n,e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e}function Mt(e,t,r){var i=Math.sin(r),o=Math.cos(r),n=t[4],s=t[5],a=t[6],c=t[7],u=t[8],l=t[9],h=t[10],d=t[11];return t!==e&&(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[4]=n*o+u*i,e[5]=s*o+l*i,e[6]=a*o+h*i,e[7]=c*o+d*i,e[8]=u*o-n*i,e[9]=l*o-s*i,e[10]=h*o-a*i,e[11]=d*o-c*i,e}function Vt(e,t,r){var i=Math.sin(r),o=Math.cos(r),n=t[0],s=t[1],a=t[2],c=t[3],u=t[8],l=t[9],h=t[10],d=t[11];return t!==e&&(e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=n*o-u*i,e[1]=s*o-l*i,e[2]=a*o-h*i,e[3]=c*o-d*i,e[8]=n*i+u*o,e[9]=s*i+l*o,e[10]=a*i+h*o,e[11]=c*i+d*o,e}function St(e,t,r){var i=Math.sin(r),o=Math.cos(r),n=t[0],s=t[1],a=t[2],c=t[3],u=t[4],l=t[5],h=t[6],d=t[7];return t!==e&&(e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=n*o+u*i,e[1]=s*o+l*i,e[2]=a*o+h*i,e[3]=c*o+d*i,e[4]=u*o-n*i,e[5]=l*o-s*i,e[6]=h*o-a*i,e[7]=d*o-c*i,e}function Nt(e,t,r){var i=t[0],o=t[1],n=t[2],s=t[3],a=i+i,c=o+o,u=n+n,l=i*a,h=i*c,d=i*u,f=o*c,v=o*u,m=n*u,p=s*a,x=s*c,L=s*u;return e[0]=1-(f+m),e[1]=h+L,e[2]=d-x,e[3]=0,e[4]=h-L,e[5]=1-(l+m),e[6]=v+p,e[7]=0,e[8]=d+x,e[9]=v-p,e[10]=1-(l+f),e[11]=0,e[12]=r[0],e[13]=r[1],e[14]=r[2],e[15]=1,e}function Ot(e,t){return e[0]=t[12],e[1]=t[13],e[2]=t[14],e}function $t(e,t){var r=t[0],i=t[1],o=t[2],n=t[4],s=t[5],a=t[6],c=t[8],u=t[9],l=t[10];return e[0]=Math.hypot(r,i,o),e[1]=Math.hypot(n,s,a),e[2]=Math.hypot(c,u,l),e}function qt(e,t,r,i){var o=t[0],n=t[1],s=t[2],a=t[3],c=o+o,u=n+n,l=s+s,h=o*c,d=o*u,f=o*l,v=n*u,m=n*l,p=s*l,x=a*c,L=a*u,M=a*l,g=i[0],_=i[1],y=i[2];return e[0]=(1-(v+p))*g,e[1]=(d+M)*g,e[2]=(f-L)*g,e[3]=0,e[4]=(d-M)*_,e[5]=(1-(h+p))*_,e[6]=(m+x)*_,e[7]=0,e[8]=(f+L)*y,e[9]=(m-x)*y,e[10]=(1-(h+v))*y,e[11]=0,e[12]=r[0],e[13]=r[1],e[14]=r[2],e[15]=1,e}function kt(e,t){var r=t[0],i=t[1],o=t[2],n=t[3],s=r+r,a=i+i,c=o+o,u=r*s,l=i*s,h=i*a,d=o*s,f=o*a,v=o*c,m=n*s,p=n*a,x=n*c;return e[0]=1-h-v,e[1]=l+x,e[2]=d-p,e[3]=0,e[4]=l-x,e[5]=1-u-v,e[6]=f+m,e[7]=0,e[8]=d+p,e[9]=f-m,e[10]=1-u-h,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function Ht(e,t,r,i,o){var n=1/Math.tan(t/2),s;return e[0]=n/r,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=n,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,o!=null&&o!==1/0?(s=1/(i-o),e[10]=(o+i)*s,e[14]=2*o*i*s):(e[10]=-1,e[14]=-2*i),e}var Xt=Ht;function Lt(e,t,r,i){var o,n,s,a,c,u,l,h,d,f,v=t[0],m=t[1],p=t[2],x=i[0],L=i[1],M=i[2],g=r[0],_=r[1],y=r[2];return Math.abs(v-g)<it&&Math.abs(m-_)<it&&Math.abs(p-y)<it?lt(e):(l=v-g,h=m-_,d=p-y,f=1/Math.hypot(l,h,d),l*=f,h*=f,d*=f,o=L*d-M*h,n=M*l-x*d,s=x*h-L*l,f=Math.hypot(o,n,s),f?(f=1/f,o*=f,n*=f,s*=f):(o=0,n=0,s=0),a=h*s-d*n,c=d*o-l*s,u=l*n-h*o,f=Math.hypot(a,c,u),f?(f=1/f,a*=f,c*=f,u*=f):(a=0,c=0,u=0),e[0]=o,e[1]=a,e[2]=l,e[3]=0,e[4]=n,e[5]=c,e[6]=h,e[7]=0,e[8]=s,e[9]=u,e[10]=d,e[11]=0,e[12]=-(o*v+n*m+s*p),e[13]=-(a*v+c*m+u*p),e[14]=-(l*v+h*m+d*p),e[15]=1,e)}function Y(){var e=new F(3);return F!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e}function Yt(e){var t=e[0],r=e[1],i=e[2];return Math.hypot(t,r,i)}function rt(e,t,r){var i=new F(3);return i[0]=e,i[1]=t,i[2]=r,i}function jt(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e}function Wt(e,t){var r=t[0],i=t[1],o=t[2],n=r*r+i*i+o*o;return n>0&&(n=1/Math.sqrt(n)),e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e}function pt(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function et(e,t,r){var i=t[0],o=t[1],n=t[2],s=r[0],a=r[1],c=r[2];return e[0]=o*c-n*a,e[1]=n*s-i*c,e[2]=i*a-o*s,e}var Zt=Yt;(function(){var e=Y();return function(t,r,i,o,n,s){var a,c;for(r||(r=3),i||(i=0),o?c=Math.min(o*r+i,t.length):c=t.length,a=i;a<c;a+=r)e[0]=t[a],e[1]=t[a+1],e[2]=t[a+2],n(e,e,s),t[a]=e[0],t[a+1]=e[1],t[a+2]=e[2];return t}})();function Tt(){var e=new F(4);return F!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0,e[3]=0),e}function Kt(e){var t=new F(4);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t}function I(e,t,r,i){var o=new F(4);return o[0]=e,o[1]=t,o[2]=r,o[3]=i,o}function Pt(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e[2]=t[2]+r[2],e[3]=t[3]+r[3],e}function zt(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e[2]=t[2]-r[2],e[3]=t[3]-r[3],e}function Qt(e,t,r){return e[0]=t[0]*r[0],e[1]=t[1]*r[1],e[2]=t[2]*r[2],e[3]=t[3]*r[3],e}function Jt(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e[3]=t[3]*r,e}function te(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=-t[3],e}function X(e,t){var r=t[0],i=t[1],o=t[2],n=t[3],s=r*r+i*i+o*o+n*n;return s>0&&(s=1/Math.sqrt(s)),e[0]=r*s,e[1]=i*s,e[2]=o*s,e[3]=n*s,e}function B(e,t,r){var i=t[0],o=t[1],n=t[2],s=t[3];return e[0]=r[0]*i+r[4]*o+r[8]*n+r[12]*s,e[1]=r[1]*i+r[5]*o+r[9]*n+r[13]*s,e[2]=r[2]*i+r[6]*o+r[10]*n+r[14]*s,e[3]=r[3]*i+r[7]*o+r[11]*n+r[15]*s,e}(function(){var e=Tt();return function(t,r,i,o,n,s){var a,c;for(r||(r=4),i||(i=0),o?c=Math.min(o*r+i,t.length):c=t.length,a=i;a<c;a+=r)e[0]=t[a],e[1]=t[a+1],e[2]=t[a+2],e[3]=t[a+3],n(e,e,s),t[a]=e[0],t[a+1]=e[1],t[a+2]=e[2],t[a+3]=e[3];return t}})();function nt(){var e=new F(4);return F!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e[3]=1,e}function ee(e,t,r){r=r*.5;var i=Math.sin(r);return e[0]=i*t[0],e[1]=i*t[1],e[2]=i*t[2],e[3]=Math.cos(r),e}function re(e,t,r){var i=t[0],o=t[1],n=t[2],s=t[3],a=r[0],c=r[1],u=r[2],l=r[3];return e[0]=i*l+s*a+o*u-n*c,e[1]=o*l+s*c+n*a-i*u,e[2]=n*l+s*u+i*c-o*a,e[3]=s*l-i*a-o*c-n*u,e}function ie(e,t,r){r*=.5;var i=t[0],o=t[1],n=t[2],s=t[3],a=Math.sin(r),c=Math.cos(r);return e[0]=i*c+s*a,e[1]=o*c+n*a,e[2]=n*c-o*a,e[3]=s*c-i*a,e}function oe(e,t,r){r*=.5;var i=t[0],o=t[1],n=t[2],s=t[3],a=Math.sin(r),c=Math.cos(r);return e[0]=i*c-n*a,e[1]=o*c+s*a,e[2]=n*c+i*a,e[3]=s*c-o*a,e}function ne(e,t,r){r*=.5;var i=t[0],o=t[1],n=t[2],s=t[3],a=Math.sin(r),c=Math.cos(r);return e[0]=i*c+o*a,e[1]=o*c-i*a,e[2]=n*c+s*a,e[3]=s*c-n*a,e}function st(e,t,r,i){var o=t[0],n=t[1],s=t[2],a=t[3],c=r[0],u=r[1],l=r[2],h=r[3],d,f,v,m,p;return f=o*c+n*u+s*l+a*h,f<0&&(f=-f,c=-c,u=-u,l=-l,h=-h),1-f>it?(d=Math.acos(f),v=Math.sin(d),m=Math.sin((1-i)*d)/v,p=Math.sin(i*d)/v):(m=1-i,p=i),e[0]=m*o+p*c,e[1]=m*n+p*u,e[2]=m*s+p*l,e[3]=m*a+p*h,e}function H(e,t){var r=t[0],i=t[1],o=t[2],n=t[3],s=r*r+i*i+o*o+n*n,a=s?1/s:0;return e[0]=-r*a,e[1]=-i*a,e[2]=-o*a,e[3]=n*a,e}function Ct(e,t){var r=t[0]+t[4]+t[8],i;if(r>0)i=Math.sqrt(r+1),e[3]=.5*i,i=.5/i,e[0]=(t[5]-t[7])*i,e[1]=(t[6]-t[2])*i,e[2]=(t[1]-t[3])*i;else{var o=0;t[4]>t[0]&&(o=1),t[8]>t[o*3+o]&&(o=2);var n=(o+1)%3,s=(o+2)%3;i=Math.sqrt(t[o*3+o]-t[n*3+n]-t[s*3+s]+1),e[o]=.5*i,i=.5/i,e[3]=(t[n*3+s]-t[s*3+n])*i,e[n]=(t[n*3+o]+t[o*3+n])*i,e[s]=(t[s*3+o]+t[o*3+s])*i}return e}var at=Kt,se=I,It=X;(function(){var e=Y(),t=rt(1,0,0),r=rt(0,1,0);return function(i,o,n){var s=pt(o,n);return s<-.999999?(et(e,t,o),Zt(e)<1e-6&&et(e,r,o),Wt(e,e),ee(i,e,Math.PI),i):s>.999999?(i[0]=0,i[1]=0,i[2]=0,i[3]=1,i):(et(e,o,n),i[0]=e[0],i[1]=e[1],i[2]=e[2],i[3]=1+s,It(i,i))}})();(function(){var e=nt(),t=nt();return function(r,i,o,n,s,a){return st(e,i,s,a),st(t,o,n,a),st(r,e,t,2*a*(1-a)),r}})();(function(){var e=xt();return function(t,r,i,o){return e[0]=i[0],e[3]=i[1],e[6]=i[2],e[1]=o[0],e[4]=o[1],e[7]=o[2],e[2]=-r[0],e[5]=-r[1],e[8]=-r[2],It(t,Ct(t,e))}})();const ot=class D{constructor(){C(this,"_coord"),C(this,"scale",t=>{const r=new D;return Jt(r._coord,this._coord,t),r}),C(this,"dot",t=>pt(this.vec3(),t.vec3())),C(this,"add",t=>{const r=new D;return Pt(r._coord,this._coord,t._coord),r}),C(this,"multiply",t=>{const r=new D;return Qt(r._coord,this._coord,t._coord),r}),this._coord=I(0,0,0,0)}static get bufferSize(){return 4*4}static fromValues(t,r,i){const o=new D;return o._coord=I(t,r,i,0),o}static fromVec4(t){const r=new D,i=t[3]!==0?t[3]:1;return r._coord=I(t[0]/i,t[1]/i,t[2]/i,0),r}static fromVec3(t){const r=new D;return r._coord=I(t[0],t[1],t[2],0),r}static fromPoints(t,r){const i=new D;return zt(i._coord,t.vec4(),r.vec4()),i}static fromPoint(t){const r=new D;return r._coord=[...t.triplet,0],r}toString(){return`Vector(${this.x}, ${this.y}, ${this.z})`}map(t){const r=new D;return t.isFrame()?B(r._coord,this._coord,t.inverseMatrix):B(r._coord,this._coord,t.directMatrix),r}unMap(t){const r=new D;return t.isFrame()?B(r._coord,this._coord,t.directMatrix):B(r._coord,this._coord,t.inverseMatrix),r}relative(t){return this.map(t)}absolute(t){return this.unMap(t)}isUnitVector(){return!1}get x(){return this._coord[0]}get y(){return this._coord[1]}get z(){return this._coord[2]}get triplet(){return[this.x,this.y,this.z]}get coordinates(){return[...this._coord.values()]}buffer(){return new Float32Array(this.coordinates)}get length(){const t=this._coord[0],r=this._coord[1],i=this._coord[2];return Math.sqrt(t*t+r*r+i*i)}get lengthSquare(){const t=this._coord[0],r=this._coord[1],i=this._coord[2];return t*t+r*r+i*i}vec3(){return rt(this.x,this.y,this.z)}vec4(){return I(this.x,this.y,this.z,0)}};C(ot,"crossProduct",(e,t)=>{const r=Y();return et(r,e.vec3(),t.vec3()),ot.fromVec3(r)}),C(ot,"dot",(e,t)=>pt(e.vec3(),t.vec3()));let P=ot;class V{constructor(){C(this,"_coord"),this._coord=I(0,0,0,1)}static get bufferSize(){return 4*4}static origin(){return new V}static fromValues(t,r,i,o=1){const n=new V;return n._coord=I(t/o,r/o,i/o,1),n}static fromVector(t){const r=new V;return r._coord=I(t.x,t.y,t.z,1),r}static fromVec4(t){const r=new V,i=t[3]!==0?t[3]:1;return r._coord=I(t[0]/i,t[1]/i,t[2]/i,1),r}static fromVec3(t){const r=new V;return r._coord=I(t[0],t[1],t[2],1),r}toString(){return`Point(${this.x}, ${this.y}, ${this.z})`}map(t){const r=new V;return t.isFrame()?B(r._coord,this._coord,t.inverseMatrix):B(r._coord,this._coord,t.directMatrix),r}unMap(t){const r=new V;return t.isFrame()?B(r._coord,this._coord,t.directMatrix):B(r._coord,this._coord,t.inverseMatrix),r}relative(t){return this.map(t)}absolute(t){return this.unMap(t)}static relative(t,r){return t.map(r)}static absolute(t,r){return t.unMap(r)}subtract(t){const r=Tt();return zt(r,this._coord,t._coord),P.fromVec4(r)}scale(t){const r=Y();return jt(r,this.vec3(),t),V.fromVec3(r)}add(t){const r=new V;return Pt(r._coord,this._coord,t.vec4()),r}isPoint(){return!0}get x(){return this._coord[0]}get y(){return this._coord[1]}get z(){return this._coord[2]}get coordinates(){return[...this._coord.values()]}get triplet(){return[this.x,this.y,this.z]}buffer(){return new Float32Array(this.coordinates)}vec3(){return rt(this.x,this.y,this.z)}vec4(){return I(this.x,this.y,this.z,1)}}const dt=class N{constructor(){C(this,"_coord"),this._coord=I(1,1,1,0)}static get bufferSize(){return 4*4}static fromVector(t){const r=new N;return r._coord=I(t.x,t.y,t.z,0),X(r._coord,r._coord),r}fromPoint(t){return N.fromValues(...t.triplet)}static fromValues(t,r,i){const o=I(t,r,i,0);return X(o,o),N.fromVec4(o)}static fromVec4(t){const r=new N,i=t[3]!==0?t[3]:1;return r._coord=I(t[0]/i,t[1]/i,t[2]/i,0),X(r._coord,r._coord),r}static fromVec3(t){const r=new N;return r._coord=I(t[0],t[1],t[2],0),X(r._coord,r._coord),r}toString(){return`UnitVector(${this.x}, ${this.y}, ${this.z})`}map(t){const r=new N;return t.isFrame()?B(r._coord,this._coord,t.inverseMatrix):B(r._coord,this._coord,t.directMatrix),X(r._coord,r._coord),r}unMap(t){const r=new N;return t.isFrame()?B(r._coord,this._coord,t.directMatrix):B(r._coord,this._coord,t.inverseMatrix),X(r._coord,r._coord),r}relative(t){return this.map(t)}absolute(t){return this.unMap(t)}invert(){const t=new N;return te(t._coord,this._coord),t}scale(t){return P.fromValues(this.x*t,this.y*t,this.z*t)}isUnitVector(){return!0}get x(){return this._coord[0]}get y(){return this._coord[1]}get z(){return this._coord[2]}get length(){return 1}get coordinates(){return[...this._coord.values()]}get triplet(){return[this.x,this.y,this.z]}buffer(){return new Float32Array(this.coordinates)}vec3(){return rt(this.x,this.y,this.z)}};C(dt,"crossProduct",(e,t)=>{const r=Y();return et(r,e.vec3(),t.vec3()),dt.fromVec3(r)});let S=dt;const mt=e=>e.isUnitVector();class w{constructor(){C(this,"_direct"),C(this,"_inverse"),C(this,"_isIdentity",!0),this._direct=O(),this._inverse=O(),T(this._inverse,this._direct)}static get bufferSize(){return 16*4}static world(){return new w}static identity(){return new w}static fromRotation(t){const r=new w;return kt(r._direct,t.quat),T(r._inverse,r._direct),r._isIdentity=!1,r}static fromMat4(t){const r=new w,i=O();return T(i,t),r._direct=U(t),r._inverse=U(i),r._isIdentity=!1,r}static lookAt(t,r,i){const o=new w;return Lt(o._direct,t.vec3(),r.vec3(),i.vec3()),T(o._inverse,o._direct),o._isIdentity=!1,o}static perspective(t,r,i,o){const n=new w;return Xt(n._direct,t,r,i,o),T(n._inverse,n._direct),n._isIdentity=!1,n}static invert(t){const r=new w;return r._direct=U(t._inverse),r._inverse=U(t._direct),r._isIdentity=!1,r}static translation(t,r,i){const o=new w;return j(o._direct,o._direct,[t,r,i]),T(o._inverse,o._direct),o._isIdentity=!1,o}static move(t){const r=new w;return j(r._direct,r._direct,t.vec3()),T(r._inverse,r._direct),r._isIdentity=!1,r}static rotationX(t){const r=new w;return Mt(r._direct,r._direct,t),T(r._inverse,r._direct),r._isIdentity=!1,r}static rotationY(t){const r=new w;return Vt(r._direct,r._direct,t),T(r._inverse,r._direct),r._isIdentity=!1,r}static rotationZ(t){const r=new w;return St(r._direct,r._direct,t),T(r._inverse,r._direct),r._isIdentity=!1,r}static scale(t,r,i){const o=new w;return Ut(o._direct,o._direct,[t,r,i]),T(o._inverse,o._direct),o._isIdentity=!1,o}static rotoTranslation(t,r){const i=new w;return Nt(i._direct,t.quat,r.vec3()),T(i._inverse,i._direct),i._isIdentity=!1,i}static fromRotationTranslationScale(t,r,i){const o=new w;return qt(o._direct,t.quat,r.vec3(),i.vec3()),T(o._inverse,o._direct),o._isIdentity=!1,o}isFrame(){return!1}get values(){return this._direct.values()}get inverseValues(){return this._inverse.values()}buffer(){return new Float32Array(this._direct.values())}inverseBuffer(){return new Float32Array(this._inverse.values())}apply(t){return t.map(this)}compose(t){const r=new w,{_direct:i,_inverse:o}=this,{_direct:n,_inverse:s}=t;return ht(r._direct,n,i),ht(r._inverse,o,s),r._isIdentity=!1,r}transpose(){const t=new w;return Rt(t._direct,this._direct),T(t._inverse,t._direct),t._isIdentity=!1,t}translation(t,r,i){const o=w.translation(t,r,i);return this.compose(o)}rotationX(t){const r=w.rotationX(t);return this.compose(r)}rotationY(t){const r=w.rotationY(t);return this.compose(r)}rotationZ(t){const r=w.rotationZ(t);return this.compose(r)}scale(t,r,i){const o=w.scale(t,r,i);return this.compose(o)}invert(){const t=new w;return t._direct=U(this._inverse),t._inverse=U(this._direct),t._isIdentity=this._isIdentity,t}get directMatrix(){return this._direct}get inverseMatrix(){return this._inverse}get isIdentity(){return this._isIdentity}get scaleVector(){const t=Y();return $t(t,this._direct),P.fromValues(t[0],t[1],t[2])}get positionVector(){const t=Y();return Ot(t,this._direct),P.fromValues(t[0],t[1],t[2])}}const ft=class R{constructor(){C(this,"_direct"),C(this,"_inverse"),this._direct=O(),this._inverse=O(),lt(this._direct),lt(this._inverse)}static bufferSize(){return 16*4}static world(){return new R}static translation(t){const r=new R,i=O();return j(i,i,t.vec3()),r._inverse=i,T(r._direct,r._inverse),r}static rotationX(t,r){const i=new R,o=O();return j(o,o,t.vec3()),Mt(o,o,r),i._direct=o,T(i._inverse,i._direct),i}static rotationY(t,r){const i=new R,o=O();return j(o,o,t.vec3()),Vt(o,o,r),i._direct=o,T(i._inverse,i._direct),i}static rotationZ(t,r){const i=new R,o=O();return j(o,o,t.vec3()),St(o,o,r),i._direct=o,T(i._inverse,i._direct),i}static lookAt(t,r,i){const o=new R;return Lt(o._inverse,t.vec3(),r.vec3(),i.vec3()),T(o._direct,o._inverse),o}isFrame(){return!0}toString(){return`Frame(${this.origin}, ${this.i}, ${this.j}, ${this.k})`}map(t){return this.compose(t)}unMap(t){return this.invert().compose(t)}compose(t){const r=new R,{_direct:i}=this,{_direct:o}=t;return ht(r._direct,o,i),T(r._inverse,r._direct),r}toTransform(){return w.fromMat4(this._inverse)}invert(){const t=new R;return t._direct=U(this._inverse),t._inverse=U(this._direct),t}get directMatrix(){return U(this._direct)}get inverseMatrix(){return U(this._inverse)}get i(){return S.fromValues(this._direct[0],this._direct[1],this._direct[2])}get j(){return S.fromValues(this._direct[4],this._direct[5],this._direct[6])}get k(){return S.fromValues(this._direct[8],this._direct[9],this._direct[10])}get o(){return V.fromValues(this._direct[12],this._direct[13],this._direct[14],this._direct[15])}get origin(){return V.fromValues(this._inverse[12],this._inverse[13],this._inverse[14],this._inverse[15])}relative(t){if(t&&ae(t)){const r=this.origin.relative(t),i=this.k.relative(t),o=this.i.relative(t);return R.from2Vectors(r,i,o)}return t.relative(this)}};C(ft,"from2Vectors",(e,t,r)=>{const i=new ft,o=mt(t)?t:S.fromVector(t),n=S.crossProduct(o,mt(r)?r:S.fromVector(r)),s=[...S.crossProduct(n,o).coordinates,...n.coordinates,...o.coordinates,...e.coordinates];return i._direct=Et(...s),T(i._inverse,i._direct),i});let gt=ft;const ae=e=>e&&e.isFrame!==void 0?e.isFrame():!1;class E{constructor(){C(this,"_direct"),C(this,"_inverse"),this._direct=nt(),this._inverse=nt()}static identity(){return new E}static fromValues(t,r,i,o){const n=new E;return n._direct=se(t,r,i,o),H(n._inverse,n._direct),n}static fromQuat(t){const r=new E;return r._direct=at(t),H(r._inverse,r._direct),r}static fromTransform(t){const r=xt();Dt(r,t.directMatrix);const i=new E;return i._direct=Ct(i._direct,r),H(i._inverse,i._direct),i}static rotationX(t){const r=new E;return ie(r._direct,r._direct,t),H(r._inverse,r._direct),r}static rotationY(t){const r=new E;return oe(r._direct,r._direct,t),H(r._inverse,r._direct),r}static rotationZ(t){const r=new E;return ne(r._direct,r._direct,t),H(r._inverse,r._direct),r}inverse(){const t=new E;return t._direct=at(this._inverse),t._inverse=at(this._direct),t}compose(t){const r=new E;return re(r._direct,this._direct,t._direct),H(r._inverse,r._direct),r}get quat(){return this._direct}}var ce=Object.defineProperty,ue=(e,t,r)=>t in e?ce(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,b=(e,t,r)=>(ue(e,typeof t!="symbol"?t+"":t,r),r);const _t=()=>{let e=0,t=performance.now(),r=0;const i=[];return console.log("Init FPS",t),{getFPS:()=>i.reduce((o,n)=>o+n,0)/i.length,measureFPS:()=>(e=performance.now()-t,e<=1?i[r]:(r=(r+1)%10,i[r]=1e3/e,t=performance.now(),e)),getLastTimeSpan:()=>e}},le=async({context:e,device:t,format:r},i)=>{e.configure({device:t,format:r,alphaMode:"opaque"});const o=t.createShaderModule({code:i});return(await o.getCompilationInfo()).messages.forEach(n=>{let s=n.message;n.lineNum&&(s=`Line ${n.lineNum}:${n.linePos} - "${i.substr(n.offset,n.length+40)}"
`+n.message),console.error("WGSL error: ",s)}),o},he=e=>{const t=3*w.bufferSize+8+4*(2*P.bufferSize)+4*(P.bufferSize+V.bufferSize),r=4,i=r*(2*P.bufferSize)+r*(P.bufferSize+V.bufferSize)+4*4,o=e.device.createBuffer({label:"TransBuffer",size:t+t%16,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),n=e.device.createBuffer({label:"LightBuffer",size:i+i%16,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),s=[{binding:0,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,buffer:{type:"uniform"}},{binding:1,visibility:GPUShaderStage.FRAGMENT,buffer:{type:"uniform"}}],a=e.device.createBindGroupLayout({label:"transformations",entries:s}),c=[{binding:0,resource:{buffer:o}},{binding:1,resource:{buffer:n}}],u=e.device.createBindGroup({label:"SceneData",layout:a,entries:c});return[a,u,[o,n]]},de=e=>{const t=2*w.bufferSize,r=e.device.createBuffer({label:"TransBuffer",size:t+t%16,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),i=[{binding:0,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,buffer:{type:"uniform"}}],o=e.device.createBindGroupLayout({label:"modelTransf",entries:i}),n=[{binding:0,resource:{buffer:r}}],s=e.device.createBindGroup({label:"SceneData",layout:o,entries:n});return[o,s,[r]]},fe=e=>{const t=e.device.createBuffer({size:16,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),r=[{binding:0,visibility:GPUShaderStage.FRAGMENT,buffer:{type:"uniform"}}],i=e.device.createBindGroupLayout({label:"color",entries:r}),o=[{binding:0,resource:{buffer:t}}],n=e.device.createBindGroup({label:"color",layout:i,entries:o});return[i,n,[t]]},pe=(e,t)=>{const r=[{binding:0,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:1,visibility:GPUShaderStage.FRAGMENT,sampler:{}}],i=e.device.createBindGroupLayout({label:"texture",entries:r}),o=[{binding:0,resource:t.view},{binding:1,resource:t.sampler}],n=e.device.createBindGroup({label:"texture",layout:i,entries:o});return[i,n]},ve=(e,t)=>{const{device:r}=e,[i,o,n]=he(e),[s,a,c]=fe(e),[u,l,h]=de(e),[d,f]=t?pe(e,t):[void 0,void 0],v=d?[i,s,u,d]:[i,s,u],m=[o,a,l,f],p=[n,c,h];return[r.createPipelineLayout({bindGroupLayouts:v}),m,p]},yt=(e,t,r)=>{const{device:i,format:o}=e,n=r.map(s=>{const[a,c,u]=ve(e,s.material),l={label:s.label,layout:a,multisample:{count:1},vertex:{module:t,entryPoint:s.vertexShader,buffers:[s.bufferLayout]},fragment:{module:t,entryPoint:s.fragmentShader,targets:[{format:o,blend:{color:{srcFactor:"src-alpha",dstFactor:"one-minus-src-alpha",operation:"add"},alpha:{srcFactor:"src-alpha",dstFactor:"one-minus-src-alpha",operation:"add"}}}]},primitive:{topology:s.primitives,cullMode:s.cullMode},depthStencil:{depthWriteEnabled:!0,depthCompare:"less",format:"depth24plus"}},h=i.createRenderPipeline(l),d={...l,label:`${s.label}-alt`,primitive:{topology:"line-list",cullMode:"none"}},f=i.createRenderPipeline(d);return[s.id,{id:s.id,type:s.label,pipeline:h,altPipeline:f,geoRenderable:s,uniformBuffers:u,bindGroups:c}]});return new Map(n)},me=(e,t)=>{let r="none",i=[0,0],o=[0,0],n=[0,0];e.addEventListener("contextmenu",s=>{s.preventDefault()}),e.addEventListener("wheel",s=>{s.ctrlKey?t.tilt(s.deltaY):t.zoom(s.deltaY)}),e.addEventListener("pointerdown",s=>{e.setPointerCapture(s.pointerId),i=[s.offsetX,s.offsetY],o=[0,0],n=i,r=`${s.ctrlKey?"ctrl-":""}mouse-${s.button}`,t.move(r,{origin:i,direction:o},n)}),e.addEventListener("pointermove",s=>{if(r==="none")return;const a=[s.offsetX,s.offsetY];o=[a[0]-n[0],a[1]-n[1]],n=a,t.move(r,{origin:i,direction:o},n)}),e.addEventListener("pointerup",s=>{e.releasePointerCapture(s.pointerId);const a=[s.offsetX,s.offsetY];o=[a[0]-i[0],a[1]-i[1]],o[0]<=.9&&o[1]<=.9&&t.click("none",a),t.move("none",{origin:i,direction:o},a),r="none"})},ge=(e,t,r=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST)=>{const i=e.createBuffer({size:t.byteLength,usage:r,mappedAtCreation:!0});return new Float32Array(i.getMappedRange()).set(t),i.unmap(),i},wt=e=>{const{device:t,canvas:r}=e,i=t.createTexture({size:{width:r.width,height:r.height,depthOrArrayLayers:1},sampleCount:1,format:e.format,usage:GPUTextureUsage.RENDER_ATTACHMENT}),o=t.createTexture({label:"DepthTexture",sampleCount:1,size:[r.width,r.height,1],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT}),n=Te(window.getComputedStyle(r).backgroundColor);return{colorAttachments:[{view:i.createView(),clearValue:n,loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:o.createView(),depthClearValue:1,depthStoreOp:"store",depthLoadOp:"clear"}}},_e=async e=>{const t=await navigator.gpu.requestAdapter({powerPreference:"high-performance"});if(!t)throw new Error("WebGPU:adapter is NOT available!");const r=await t.requestAdapterInfo();console.log("WebGPU:adapter info",r),console.log("WebGPU:adapter is fallback:",t.isFallbackAdapter);const i=await t.requestDevice();if(!i)throw new Error("WebGPU:device is NOT available!");const o=e.getContext("webgpu");if(!o)throw new Error("WebGPU:context from instantiated Canvas not available!");const n=navigator.gpu.getPreferredCanvasFormat();return o.configure({device:i,format:n,usage:GPUTextureUsage.RENDER_ATTACHMENT,alphaMode:"opaque"}),{context:o,device:i,canvas:e,format:n}},ye=e=>typeof e=="string",we=(e,[t,r],i)=>({view:i&&i.view?i.view(e.view):w.lookAt(V.fromValues(-5,-5,-5),V.fromValues(0,0,0),S.fromValues(0,0,1)),projection:i&&i.projection?i.projection(e.projection):w.perspective(Math.PI/5,t/r,.1,100)}),be=(e,t)=>Math.log(e)/Math.log(t),xe=`const MAX_DIR_LIGHTS: u32 = 4;
const MAX_POINT_LIGHTS: u32 = 4;

struct DirectionalLight {
  dir: vec4<f32>,
  col: vec4<f32>,
};

struct PointLight {
  pos: vec4<f32>,  // Position of the light
  col: vec4<f32>,  // Color of the light
};

struct SceneData {
  view: mat4x4<f32>,
  invertView: mat4x4<f32>,
  projection: mat4x4<f32>,
};

struct ModelData {
  model: mat4x4<f32>,
  modelInverseTranspose: mat4x4<f32>,
};

struct SceneLights {
  dirLights: array<DirectionalLight, MAX_DIR_LIGHTS>,
  pointLights: array<PointLight, MAX_POINT_LIGHTS>,
  ambient: vec4<f32>,
};

struct ObjectData {
  model: mat4x4<f32>,
};

struct TextFragment {
  @builtin(position) position: vec4<f32>,
  @location(0) texCoord: vec2<f32>,
  @location(1) normal: vec3<f32>,
  @location(2) pos: vec3<f32>,
  @location(3) eye: vec3<f32>,
};

struct ColorFragment {
  @builtin(position) position: vec4<f32>,
  @location(0) normal: vec3<f32>,
  @location(1) pos: vec3<f32>,
  @location(2) eye: vec3<f32>,
  @location(3) viewZ: f32,
};

struct ColorLineFragment {
  @builtin(position) position: vec4<f32>,
  @location(0) viewZ: f32,
  @location(1) targetZ: f32,
};

struct ColorData {
    color: vec4<f32>,
};


@group(0) @binding(0) var<uniform> sceneData: SceneData;
@group(0) @binding(1) var<uniform> sceneLights: SceneLights;
@group(1) @binding(0) var<uniform> myColor: ColorData;
@group(2) @binding(0) var<uniform> myModel: ModelData;
@group(3) @binding(0) var myTexture: texture_2d<f32>;
@group(3) @binding(1) var mySampler: sampler;

fn computeDiffuseColor(
    eye: vec3<f32>,
    pos: vec3<f32>,
    normal: vec3<f32>,
    sceneLights: SceneLights) -> vec3<f32> {
  let shininess: f32 = 32.0;
  var diffuse: vec3<f32> = sceneLights.ambient.rgb;
  for (var i: u32 = 0; i < MAX_DIR_LIGHTS; i = i + 1) {
    if (sceneLights.dirLights[i].col.a != 0.0) {
      let lightDir: vec3<f32> = normalize(sceneLights.dirLights[i].dir.xyz); //
      let lightColor: vec3<f32> = sceneLights.dirLights[i].col.rgb;
      var NdotL: f32 = pow(max(dot(normal, lightDir), 0), 2);
      diffuse = diffuse + (NdotL * lightColor);
    }
  }
  for (var i: u32 = 0; i < MAX_POINT_LIGHTS; i = i + 1) {
    if (sceneLights.pointLights[i].col.a != 0.0) {
      let dir = sceneLights.pointLights[i].pos.xyz - pos; //  - pos.xyz;
      let attenuation = 1.0 - clamp(pow( length(dir)/20, 2.0), 0.0, 1.0 );

      let lightDir: vec3<f32> = normalize(dir);
      let lightColor: vec3<f32> = sceneLights.pointLights[i].col.rgb;
      var NdotL: f32 = pow(max(dot(normal, lightDir), 0), 2);
      let diffuseColor = NdotL * lightColor;

      // Specular
      let V = normalize(pos - eye);
      let R = normalize(reflect(lightDir, normal));
      let specularIntensity = pow(max(dot(V, R), 0.0), shininess);
      let specularColor = specularIntensity * lightColor;

      diffuse = diffuse + (diffuseColor+ specularColor) * attenuation;
    }
  }
  return clamp(diffuse, vec3<f32>(0.0, 0.0, 0.0), vec3<f32>(1.0, 1.0, 1.0));
}


// ----------------------------------------------------------------------------------------------- Texture Shaders

@vertex
fn vertexTextureShader(
    @location(0) vertexPosition: vec3<f32>,
    @location(1) vertexTexCoord: vec2<f32>,
    @location(2) vertexNormal: vec3<f32>) -> TextFragment {
  var output: TextFragment;
  var vertex = myModel.model * vec4<f32>(vertexPosition, 1.0);
  output.position = sceneData.projection * sceneData.view * vertex;
  output.texCoord = vec2<f32>(vertexTexCoord);
  output.normal = normalize((myModel.modelInverseTranspose * vec4<f32>(vertexNormal, 0.0)).xyz);
  output.pos = vertex.xyz;
  output.eye = sceneData.invertView[3].xyz;

  return output;
}

@fragment
fn fragmentTextureShader(in: TextFragment) -> @location(0) vec4<f32> {
  let diffuse: vec3<f32> = computeDiffuseColor( in.eye, in.pos, in.normal, sceneLights );
  let texColor: vec4<f32> = textureSample(myTexture, mySampler, in.texCoord);

  return vec4<f32>(texColor.rgb * diffuse, 1.0);
}

// ----------------------------------------------------------------------------------------------- Color Shaders

@vertex
fn vertexColorShader(
    @location(0) vertexPosition: vec3<f32>,
    @location(1) vertexNormal: vec3<f32>) -> ColorFragment {
  var output: ColorFragment;
  var vertex = myModel.model * vec4<f32>(vertexPosition, 1.0);
  var positionInViewSpace = sceneData.view * vertex;
  var bias = 0.002 * positionInViewSpace.z;

  var biasedPositionInViewSpace = positionInViewSpace - vec4<f32>(0.0, 0.0, bias, 0.0);

  output.normal = normalize((myModel.modelInverseTranspose * vec4<f32>(vertexNormal, 0.0)).xyz);
  output.position = sceneData.projection * sceneData.view * vertex;
  output.pos = vertex.xyz;
  output.eye = sceneData.invertView[3].xyz;
  output.viewZ = -biasedPositionInViewSpace.z;

  return output;
}

@fragment
fn fragmentColorShader(in: ColorFragment) -> @location(0) vec4<f32> {
  let diffuse: vec3<f32> = computeDiffuseColor( in.eye, in.pos, in.normal, sceneLights );
  let att: f32 =  1.0 - clamp(in.viewZ / 300, 0.2, 1.0); // TODO: get the 100 from the scene data

  return vec4<f32>(myColor.color.rgb * diffuse.rgb * att, myColor.color.a);
}


@vertex
fn vertexLineShader(
    @location(0) vertexPosition: vec3<f32>) -> ColorLineFragment {
  var output: ColorLineFragment;
  var vertex = myModel.model * vec4<f32>(vertexPosition, 1.0);

  let eye  = vec4<f32>(sceneData.invertView[3].xyz, 1.0);

  let eyeInViewSpace = sceneData.view * eye;
  let positionInViewSpace = sceneData.view * vertex;
  let bias = 0.002 * positionInViewSpace.z;
  let biasedPositionInViewSpace = positionInViewSpace - vec4<f32>(0.0, 0.0, bias, 0.0);
  output.viewZ = -biasedPositionInViewSpace.z;
  output.targetZ = eyeInViewSpace.z;
  output.position = sceneData.projection * biasedPositionInViewSpace;

  return output;
}


@fragment
fn fragmentLineShader(in: ColorLineFragment) -> @location(0) vec4<f32> {
  let att: f32 =  1.0 - clamp(in.viewZ / 100, 0.0, 1.0); // TODO: get the 100 from the scene data

  return vec4<f32>(myColor.color.rgb, myColor.color.a * att);
}
`,Me="",Ve=e=>{const{canvas:t,context:r,device:i}=e;let[o,n]=[t.width,t.height];return new ResizeObserver(s=>{const{width:a,height:c}=s[0].contentRect;[o,n]=[Math.round(a),Math.round(c)]}).observe(t.parentElement),s=>{if(o===t.width&&n===t.height){const h=r.getCurrentTexture(),d=s.colorAttachments;return d[0].view=h.createView({label:"ColorView"}),s}t.width=o,t.height=n;const a=i.createTexture({label:"DepthTexture",sampleCount:1,size:[o,n,1],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT}),c=i.createTexture({label:"ColorTexture",size:{width:o,height:n,depthOrArrayLayers:1},sampleCount:1,format:"bgra8unorm",usage:GPUTextureUsage.RENDER_ATTACHMENT}),u=s.colorAttachments;u[0].view=c.createView({label:"ColorView"});const l=s.depthStencilAttachment;return l.view=a.createView({label:"DepthView"}),s}};class vt{constructor(t,r,i,o){b(this,"canvas"),b(this,"context"),b(this,"device"),b(this,"format"),b(this,"_handleOnRender"),b(this,"_vertexCount",0),b(this,"_activeRenderLoop",!1),b(this,"_pipelineMode","default"),b(this,"_shaderModule"),b(this,"_pipelines",new Map),b(this,"_transformations",{projection:w.identity(),view:w.identity()}),b(this,"_renderPassDescription"),b(this,"_cameraTransHandler"),b(this,"_lightsHandler"),b(this,"_modelHandlers",{}),b(this,"_fps",_t()),b(this,"_rebuildViewTexture"),b(this,"_ambientLight",[.3,.3,.3,1]),b(this,"_dirLights",[{dir:S.fromValues(-1,-1,1),col:[.3,.3,.3,1]},{dir:S.fromValues(1,1,1),col:[.4,.3,.3,1]},{dir:S.fromValues(1,0,0),col:[.5,.5,.5,0]},{dir:S.fromValues(-1,-1,-1),col:[.3,.3,.3,0]}]),b(this,"_pointLights",[{pos:V.fromValues(-12,12,8),col:[.5,.5,.2,1]},{pos:V.fromValues(12,12,8),col:[.4,.2,.2,1]},{pos:V.fromValues(-12,-12,8),col:[.2,.2,.5,1]},{pos:V.fromValues(12,-12,8),col:[.5,.1,.5,1]}]),b(this,"render",()=>{const{device:n}=this;this._vertexCount=0,this._handleOnRender&&this._handleOnRender(this);let s=this._renderPassDescription??wt(this);this._rebuildViewTexture&&(this._renderPassDescription=this._rebuildViewTexture(s));const a=n.createCommandEncoder(),c=a.beginRenderPass(s),u=this._fps.getLastTimeSpan();this.updateLights(u),this.pipelines.filter(({geoRenderable:l})=>l.color[3]===1).forEach((l,h)=>{this.renderPipeline(l,h,c,u)}),this.pipelines.filter(({geoRenderable:l})=>l.color[3]<1).forEach((l,h)=>{this.renderPipeline(l,h,c,u)}),c.end(),n.queue.submit([a.finish()])}),this.canvas=t,this.context=r,this.device=i,this.format=o,this._rebuildViewTexture=Ve(this),this.device.lost.then(()=>{console.log("WebGPU:device lost")})}get vertexCount(){return this._vertexCount}get fps(){return this._fps.getFPS()}get dirLights(){return this._dirLights}get pontLights(){return this._pointLights}setAmbientLight(t){this._ambientLight=t}setLight(t,r,i){switch(t){case"directional":this._dirLights[r]=i;break;case"point":this._pointLights[r]=i;break}}static async build(t){return _e(t).then(({canvas:r,context:i,device:o,format:n})=>new vt(r,i,o,n))}setPipelineMode(t){this._pipelineMode=t}get pipelines(){return[...this._pipelines.values()]}getScene(){return[...this._pipelines.values()].map(({geoRenderable:t})=>t)}async setupShaders(t){if(this._shaderModule)return this;let r;if(ye(t))switch(t){case"standard-3d":r=xe;break;case"standard-2d":default:r=Me;break}else r=t.source;return this._shaderModule=await le(this,r),this}setScene(t){if(!this._shaderModule)throw new Error("WebGPU:shader module is NOT available!");t.forEach(r=>{r.buildGpuBuffer(this)}),this._pipelines=yt(this,this._shaderModule,t),this._renderPassDescription=wt(this)}addToScene(t){if(!this._shaderModule)throw new Error("WebGPU:shader module is NOT available!");t.forEach(r=>{r.buildGpuBuffer(this)}),yt(this,this._shaderModule,t).forEach((r,i)=>{this._pipelines.set(i,r)})}removeFromScene(t){return this._pipelines.delete(t)}clearScene(){this._pipelines.clear()}captureMouseMotion(t){me(this.canvas,{move:(t==null?void 0:t.move)??((r,i,o)=>{}),click:(t==null?void 0:t.click)??((r,i)=>{}),zoom:(t==null?void 0:t.zoom)??(r=>{}),tilt:(t==null?void 0:t.tilt)??(r=>{})})}sceneIntoBuffer(t){const{device:r}=this,{projection:i,view:o}=this._transformations,n=o.invert();let s=0;r.queue.writeBuffer(t[0],s,o.buffer()),s+=w.bufferSize,r.queue.writeBuffer(t[0],s,n.buffer()),s+=w.bufferSize,r.queue.writeBuffer(t[0],s,i.buffer()),s+=w.bufferSize;let a=0;const c=new Float32Array(this._dirLights.flatMap(({dir:h,col:d})=>[...h.coordinates,...d]));r.queue.writeBuffer(t[1],a,c),a+=c.byteLength;const u=new Float32Array(this._pointLights.flatMap(({pos:h,col:d})=>[...h.coordinates,...d]));r.queue.writeBuffer(t[1],a,u),a+=u.byteLength;const l=new Float32Array(this._ambientLight);r.queue.writeBuffer(t[1],a,l)}updateLights(t){if(!this._lightsHandler)return;const{dirLights:r,posLights:i}=this._lightsHandler;r&&r(t,this._dirLights),i&&i(t,this._pointLights)}onRender(t){this._handleOnRender=t}renderPipeline(t,r,i,o){const{pipeline:n,altPipeline:s,uniformBuffers:a,bindGroups:c,geoRenderable:u}=t,{device:l}=this;r===0&&(this.sceneIntoBuffer(a[0]),i.setBindGroup(0,c[0]));const h=this._pipelineMode==="default"?n:s;i.setPipeline(h);const d=new Float32Array(u.color);l.queue.writeBuffer(a[1][0],0,d),i.setBindGroup(1,c[1]),this._modelHandlers[u.id]&&u.transform(o,this._modelHandlers[u.id]),l.queue.writeBuffer(a[2][0],0,u.transformationData),i.setBindGroup(2,c[2]),c[3]&&i.setBindGroup(3,c[3]),u.buffers.forEach((f,v)=>{const m=u.getVertexCountPerStrip(v);this._vertexCount+=m,i.setVertexBuffer(0,f),i.draw(m)})}renderLoop(){const{width:t,height:r}=this.canvas;this._transformations=we(this._transformations,[t,r],this._cameraTransHandler),this.render(),this._fps.measureFPS(),this._activeRenderLoop&&requestAnimationFrame(this.renderLoop.bind(this))}beginRenderLoop(t){this._fps=_t(),this._cameraTransHandler=t==null?void 0:t.camera,this._lightsHandler=t==null?void 0:t.lights,this._modelHandlers=(t==null?void 0:t.models)??{},this._activeRenderLoop=!0,this.renderLoop()}endRenderLoop(){this._activeRenderLoop=!1}}let tt=new Map;const Se=async e=>{var t,r;if(!navigator.gpu)return Promise.reject(new Error("WebGPU is not supported in this browser!"));const i=(t=tt.get(e.id))==null?void 0:t.gpu;if(i)return Promise.resolve(i);if((r=tt.get(e.id))!=null&&r.initializing)return new Promise((n,s)=>{setTimeout(()=>{var a;const c=(a=tt.get(e.id))==null?void 0:a.gpu;if(c)return console.warn("WebGPU connection already initialized. Reusing previous connection."),n(c);s(new Error("WebGPU already initialization is taking too long!"))},100)});tt.set(e.id,{initializing:!0});const o=await vt.build(e);return tt.set(e.id,{initializing:!1,gpu:o}),Promise.resolve(o)},Le=(e,t)=>{const{device:r}=e,i="rgba8unorm",o={size:[t.width,t.height,1],format:i,usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT},n=r.createTexture(o);r.queue.copyExternalImageToTexture({source:t},{texture:n},[t.width,t.height]);const s=n.createView(),a={addressModeU:"repeat",addressModeV:"repeat",magFilter:"linear",minFilter:"nearest",mipmapFilter:"nearest",maxAnisotropy:1},c=r.createSampler(a);return{texture:n,view:s,sampler:c}},Te=e=>{let t=[];const r=/rgba?\(([^)]+)\)/.exec(e);if(r&&r[1]&&(t=r[1].split(",").map(a=>parseFloat(a.trim()))),t.length<3)throw new Error("Invalid RGB/RGBA format");const i=t[0]/255,o=t[1]/255,n=t[2]/255,s=t.length===4?t[3]:1;return{r:i,g:o,b:n,a:s}},$=4;class Ft{constructor(t,r,i=[1,1,1,1]){b(this,"_body",null),b(this,"_id"),b(this,"_bufferData",null),b(this,"_vertices",[]),b(this,"_colors",[]),b(this,"_normals",[]),b(this,"_textures",[]),b(this,"_color",[1,1,1,1]),b(this,"_hasTextures",!1),b(this,"_vertexByteSize",0),b(this,"_buffers",[]),b(this,"_bufferLayout",null),b(this,"_topology","triangle-list"),b(this,"_cullMode","back"),b(this,"_material",null),b(this,"_transformation",{rotation:E.identity(),scale:P.fromValues(1,1,1),translation:P.fromValues(0,0,0)}),this._id=t,this._topology=r,this._vertexByteSize=3*4,this._color=i}get id(){return this._id}get label(){return this._topology}get translationVector(){return this._transformation.translation}get orientationRotation(){return this._transformation.rotation}get scaleVector(){return this._transformation.scale}get hasTextures(){return this._hasTextures}get material(){return this._material}get vertexShader(){return this._topology==="triangle-strip"||this._topology==="triangle-list"?this.hasTextures?"vertexTextureShader":"vertexColorShader":"vertexLineShader"}get fragmentShader(){return this._topology==="triangle-strip"||this._topology==="triangle-list"?this.hasTextures?"fragmentTextureShader":"fragmentColorShader":"fragmentLineShader"}get color(){return this._color}get primitives(){return this._topology}get cullMode(){return this._topology==="triangle-strip"||this._topology==="triangle-list"?this._cullMode:"none"}get vertexCount(){return this._vertices.reduce((t,r)=>t+r.length/3,0)}get body(){return this._body}get transformation(){return w.fromRotationTranslationScale(this._transformation.rotation,this._transformation.translation,this._transformation.scale)}get transformationData(){const t=this.transformation;return new Float32Array([...t.values,...t.transpose().invert().values])}setMaterial(t){return this._material=t,this}setBody(t){return this._body=t,this}scale(t){return this._transformation.scale=this._transformation.scale.multiply(t),this}translate(t){return this._transformation.translation=this._transformation.translation.add(t),this}rotate(t){return this._transformation.rotation=this._transformation.rotation.compose(t),this}rotoTranslate(t,r){const i=this._transformation;return i.rotation=t,i.translation=r,this}transform(t,r){return this._transformation=r(t,this._transformation),this}getVertexCountPerStrip(t){return this._vertices[t].length/3}get vertexByteSize(){return this._vertexByteSize}getByteSizePerStrip(t=0){return this._vertices[t].length*$+(this._colors.length>0?this._colors[t].length*$:0)+(this._normals.length>0?this._normals[t].length*$:0)+(this._textures.length>0?this._textures[t].length*$:0)}setCullMode(t){return this._cullMode=t,this}addVertices(t){this._vertices.push(t)}getBufferData(){return this._bufferData!==null?this._bufferData:(this._bufferData=this._vertices.map((t,r)=>{const i=[];for(let o=0,n=0,s=0,a=0;o<t.length;o+=3,n+=4,s+=3,a+=2){const c=[t[o+0],t[o+1],t[o+2]];this._colors.length>r&&(c.push(this._colors[r][n+0]),c.push(this._colors[r][n+1]),c.push(this._colors[r][n+2]),c.push(this._colors[r][n+3])),this._textures.length>r&&(c.push(this._textures[r][a+0]),c.push(this._textures[r][a+1])),this._normals.length>r&&(c.push(this._normals[r][s+0]),c.push(this._normals[r][s+1]),c.push(this._normals[r][s+2])),i.push(...c)}return new Float32Array(i)}),this._bufferData)}get layouts(){let t=0,r=0;const i=[{shaderLocation:t,offset:0,format:"float32x3"}];return t+=1,r+=3*$,this._colors.length>0&&(i.push({shaderLocation:t,offset:r,format:"float32x4"}),t+=1,r+=4*$),this._textures.length>0&&(i.push({shaderLocation:t,offset:r,format:"float32x2"}),t+=1,r+=2*$),this._normals.length>0&&(i.push({shaderLocation:t,offset:r,format:"float32x3"}),t+=1,r+=3*$),i}get buffers(){return this._buffers}get bufferLayout(){if(this._bufferLayout===null)throw new Error("TriangleData: Buffer layout is not available! - Did you call buildGpuBuffer() ?");return this._bufferLayout}buildGpuBuffer(t){this._buffers=this.getBufferData().map(r=>ge(t.device,r)),this._bufferLayout={arrayStride:this.vertexByteSize,attributes:this.layouts}}addColors(t){this._colors.length===0&&(this._vertexByteSize+=4*4),this._colors.push(t)}addNormals(t){var r;this._normals.length===0&&(this._vertexByteSize+=3*4),(r=this._normals)==null||r.push(t)}addTextures(t){this._textures.length===0&&(this._vertexByteSize+=2*4,this._hasTextures=!0),this._textures.push(t)}}const A=.5257311121191336,G=.8506508083520399,Pe=[S.fromValues(-A,0,G),S.fromValues(A,0,G),S.fromValues(-A,0,-G),S.fromValues(A,0,-G),S.fromValues(0,G,A),S.fromValues(0,G,-A),S.fromValues(0,-G,A),S.fromValues(0,-G,-A),S.fromValues(G,A,0),S.fromValues(-G,A,0),S.fromValues(G,-A,0),S.fromValues(-G,-A,0)],ze=[[0,4,1],[0,9,4],[9,5,4],[4,5,8],[4,8,1],[8,10,1],[8,3,10],[5,3,8],[5,2,3],[2,7,3],[7,10,3],[7,6,10],[7,11,6],[11,0,6],[0,1,6],[6,1,10],[9,0,11],[9,11,2],[9,2,5],[7,2,11]];function Ce(e,t){return S.fromVector(e.add(t))}function At(e,t,r=1){const i=new Map,o=[];function n(s,a){const c=s<a,u=`${c?s:a}-${c?a:s}`,l=i.get(u);if(l)return l;const h=Ce(P.fromValues(...e[s].triplet),P.fromValues(...e[a].triplet));e.push(h);const d=e.length-1;return i.set(u,d),d}for(const[s,a,c]of t){const u=n(s,a),l=n(s,c),h=n(a,c);o.push([s,u,l]),o.push([a,h,u]),o.push([c,l,h]),o.push([u,h,l])}return r===1?[e,o]:At(e,o,r-1)}const ct=e=>{let t=Math.asin(e.z);return[(Math.atan2(e.y,e.x)+Math.PI)/(2*Math.PI),.5-t/Math.PI]},Ie=(e,t)=>{const{steps:r,color:i,id:o,texture:n}=t,[s,a]=At(Pe,ze,r),c=[],u=[],l=[],h=V.fromValues(0,0,0);a.forEach(f=>{const v=V.fromVector(s[f[2]]),m=V.fromVector(s[f[1]]),p=V.fromVector(s[f[0]]),x=S.fromVector(P.fromPoints(v,h)),L=S.fromVector(P.fromPoints(m,h)),M=S.fromVector(P.fromPoints(p,h));if(c.push(...v.map(e).triplet),c.push(...m.map(e).triplet),c.push(...p.map(e).triplet),u.push(...x.triplet),u.push(...L.triplet),u.push(...M.triplet),n){const g=ct(x),_=ct(L),y=ct(M),q=Math.min(g[0],_[0],y[0]),k=Math.max(g[0],_[0],y[0]);Math.abs(k-q)>.8&&(g[0]<.4&&_[0]<.4?y[0]-=1:g[0]<.4&&y[0]<.4?_[0]-=1:_[0]<.4&&y[0]<.4?g[0]-=1:g[0]>.6&&_[0]>.6?y[0]+=1:g[0]>.6&&y[0]>.6?_[0]+=1:_[0]>.6&&y[0]>.6&&(g[0]+=1)),l.push(...g),l.push(..._),l.push(...y)}});const d=new Ft(o,"triangle-list",i);return d.addVertices(new Float32Array(c)),d.addNormals(new Float32Array(u)),n&&d.addTextures(new Float32Array(l)),d},Fe=()=>Ie,Ae=(e,t)=>{const{color:r,steps:i,id:o}=t,n=e.scaleVector,s=Math.max(n.x,n.y),a=Math.pow(i,Math.floor(be(s,i)))/i,c=Math.floor(n.x/a),u=Math.floor(n.y/a),l=1/c,h=1/u,d=[];for(let v=0;v<c+1;v++){const m=V.fromValues(-.5+l*v,-.5,0).map(e),p=V.fromValues(-.5+l*v,.5,0).map(e);d.push(m,p)}for(let v=0;v<u+1;v++){const m=V.fromValues(-.5,-.5+h*v,0).map(e),p=V.fromValues(.5,-.5+h*v,0).map(e);d.push(m,p)}const f=new Ft(o,"line-list",r);return f.addVertices(new Float32Array(d.flatMap(v=>v.triplet))),f},Ge=()=>Ae,Be=(e,t=[10,10,10])=>{let r=V.fromValues(0,0,0),i=V.fromValues(...t),o=i.x===0&&i.y===0?S.fromValues(0,1,0):S.fromValues(0,0,1),n=[0,0],s=[0,0],a=0,c=0,u=Math.PI/5,l=P.fromPoints(i,r).lengthSquare,h=gt.lookAt(i,r,o),d=!1;return[{move:(f,v,m)=>{const p=Math.min(e.canvas.width,e.canvas.height);let x=1/Math.max(e.canvas.width,e.canvas.height)*l*Math.atan(u),L=u/p*2;switch(f){case"mouse-0":n=[v.direction[0]*x,v.direction[1]*x],d=!0;break;case"mouse-1":s=[-v.direction[0]*L,v.direction[1]*L];break;case"mouse-2":u+=v.direction[1]*L;break;case"none":d=!1;break}},zoom:f=>{const v=l*Math.atan(u)/3e3;a=f*v},tilt:f=>{c=f*5e-4,d=!1}},{view:f=>{if(!f||f!=null&&f.isIdentity)return w.lookAt(i,r,o);const v=P.fromPoints(i,r).scale(1-a);v.length>2&&v.length<200&&(i=r.add(v));const m=P.fromPoints(r,i),p=w.move(m).apply(h),x=[Math.tan(s[0])*l,Math.tan(s[1])*l],L=P.fromValues(x[0],x[1],0).absolute(p),M=p.relative(i);let g=p.relative(o);g=w.rotationZ(c).apply(g);const _=w.rotationX(-n[1]).compose(w.rotationY(-n[0]));i=_.apply(M).absolute(p),o=_.apply(g).absolute(p);const y=w.move(L);return r=y.apply(r),i=y.apply(i),h=gt.lookAt(i,r,o),d||(n=[n[0]*.95,n[1]*.95],c*=.9,a*=.9,Math.abs(n[0])<.001&&Math.abs(n[1])<.001&&Math.abs(c)<.001&&Math.abs(a)<.001&&(n=[0,0],c=0,a=0)),s=[0,0],l=P.fromPoints(i,r).length,h.toTransform()},projection:f=>{const v=e.canvas.width/e.canvas.height,m=P.fromPoints(i,r).length,p=Math.max(400,m*.8);return w.perspective(u,v,Math.max(.01,m-p),m+p)}}]},De=async(e,t)=>{const r=Fe()(w.scale(1.5,1.5,1.5),{id:"hearth-sphere",steps:6,texture:!0}),i=Ge()(w.scale(50,50,1).translation(0,0,0),{id:"ref-plane",steps:50,color:[.3,.3,.5,.1]}),o=document.getElementById(t),n=await createImageBitmap(o),s=Le(e,n);return r.setMaterial(s),[r,i]};async function Ee(e,t){const r=await Se(e);await r.setupShaders("standard-3d");const[i,o]=Be(r,[6,6,4]);r.captureMouseMotion(i),r.beginRenderLoop({camera:o});const n=await De(r,"earth2");return r.setAmbientLight([0,0,0,1]),r.setLight("directional",0,{dir:S.fromValues(1,-1,0),col:[.5,.5,.5,1]}),r.setLight("point",0,{pos:V.fromValues(4,-4,0),col:[.5,.5,.5,1]}),r.setLight("point",1,{pos:V.fromValues(0,0,5),col:[.1,.4,.8,0]}),r.setLight("point",2,{pos:V.fromValues(-6,4,4.5),col:[0,.1,.4,1]}),r.setLight("point",3,{pos:V.fromValues(-6,14,8.5),col:[.2,.5,0,0]}),r.setScene(n),r}document.querySelector("#app").innerHTML=`
  <div>
    <h2>Hello World!</h2>
    <div class="main">
      <div class="left">
        <h3>Camera control test</h3>
        <p>Click and move the mouse to rotate the camera.</p>
        <h3>Controls</h3>
        <ul>
          <li>Left mouse button: rotate</li>
          <li>Center mouse button: pan</li>
          <li>Right mouse button: zoom</li>
          <li>Mouse wheel: dolly</li>
          <li>CTRL Mouse wheel: tilt</li>
        </ul>
        <div>
          <input type="checkbox" id="wireframe" onClick="setWireframe()">
          <label htmlFor="wireframe"}>WireFrame</label>
        </div>
      </div>
      <div class="right">
        <canvas id="gfx-canvas" width="800" height="600"></canvas>
      </div>
    </div>
    <p id="support">Initializing...</p>
`;const ut=document.getElementById("support"),bt=document.getElementById("gfx-canvas");setTimeout(()=>{!ut||!bt?alert("The app is broken! No canvas was found!"):Ee(bt).then(e=>{ut.innerText="All set!",globalThis.setWireframe=()=>{const t=document.getElementById("wireframe");console.log("setWireframe",t.checked),t.checked?e.setPipelineMode("alternative"):e.setPipelineMode("default")}}).catch(e=>{ut.innerText="Error: "+e.message})},2e3);
