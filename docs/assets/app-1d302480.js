(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))i(o);new MutationObserver(o=>{for(const n of o)if(n.type==="childList")for(const s of n.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function r(o){const n={};return o.integrity&&(n.integrity=o.integrity),o.referrerPolicy&&(n.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?n.credentials="include":o.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(o){if(o.ep)return;o.ep=!0;const n=r(o);fetch(o.href,n)}})();var Ht=Object.defineProperty,Yt=(e,t,r)=>t in e?Ht(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,A=(e,t,r)=>(Yt(e,typeof t!="symbol"?t+"":t,r),r),ct=1e-6,B=typeof Float32Array<"u"?Float32Array:Array;Math.hypot||(Math.hypot=function(){for(var e=0,t=arguments.length;t--;)e+=arguments[t]*arguments[t];return Math.sqrt(e)});function It(){var e=new B(9);return B!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[5]=0,e[6]=0,e[7]=0),e[0]=1,e[4]=1,e[8]=1,e}function jt(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[4],e[4]=t[5],e[5]=t[6],e[6]=t[8],e[7]=t[9],e[8]=t[10],e}function W(){var e=new B(16);return B!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0),e[0]=1,e[5]=1,e[10]=1,e[15]=1,e}function j(e){var t=new B(16);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t}function Xt(e,t,r,i,o,n,s,a,c,l,u,h,d,p,m,f){var v=new B(16);return v[0]=e,v[1]=t,v[2]=r,v[3]=i,v[4]=o,v[5]=n,v[6]=s,v[7]=a,v[8]=c,v[9]=l,v[10]=u,v[11]=h,v[12]=d,v[13]=p,v[14]=m,v[15]=f,v}function gt(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function Wt(e,t){if(e===t){var r=t[1],i=t[2],o=t[3],n=t[6],s=t[7],a=t[11];e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=r,e[6]=t[9],e[7]=t[13],e[8]=i,e[9]=n,e[11]=t[14],e[12]=o,e[13]=s,e[14]=a}else e[0]=t[0],e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=t[1],e[5]=t[5],e[6]=t[9],e[7]=t[13],e[8]=t[2],e[9]=t[6],e[10]=t[10],e[11]=t[14],e[12]=t[3],e[13]=t[7],e[14]=t[11],e[15]=t[15];return e}function z(e,t){var r=t[0],i=t[1],o=t[2],n=t[3],s=t[4],a=t[5],c=t[6],l=t[7],u=t[8],h=t[9],d=t[10],p=t[11],m=t[12],f=t[13],v=t[14],x=t[15],P=r*a-i*s,y=r*c-o*s,g=r*l-n*s,b=i*c-o*a,M=i*l-n*a,G=o*l-n*c,F=u*f-h*m,R=u*v-d*m,N=u*x-p*m,O=h*v-d*f,Z=h*x-p*f,$=d*x-p*v,C=P*$-y*Z+g*O+b*N-M*R+G*F;return C?(C=1/C,e[0]=(a*$-c*Z+l*O)*C,e[1]=(o*Z-i*$-n*O)*C,e[2]=(f*G-v*M+x*b)*C,e[3]=(d*M-h*G-p*b)*C,e[4]=(c*N-s*$-l*R)*C,e[5]=(r*$-o*N+n*R)*C,e[6]=(v*g-m*G-x*y)*C,e[7]=(u*G-d*g+p*y)*C,e[8]=(s*Z-a*N+l*F)*C,e[9]=(i*N-r*Z-n*F)*C,e[10]=(m*M-f*g+x*P)*C,e[11]=(h*g-u*M-p*P)*C,e[12]=(a*R-s*O-c*F)*C,e[13]=(r*O-i*R+o*F)*C,e[14]=(f*y-m*b-v*P)*C,e[15]=(u*b-h*y+d*P)*C,e):null}function _t(e,t,r){var i=t[0],o=t[1],n=t[2],s=t[3],a=t[4],c=t[5],l=t[6],u=t[7],h=t[8],d=t[9],p=t[10],m=t[11],f=t[12],v=t[13],x=t[14],P=t[15],y=r[0],g=r[1],b=r[2],M=r[3];return e[0]=y*i+g*a+b*h+M*f,e[1]=y*o+g*c+b*d+M*v,e[2]=y*n+g*l+b*p+M*x,e[3]=y*s+g*u+b*m+M*P,y=r[4],g=r[5],b=r[6],M=r[7],e[4]=y*i+g*a+b*h+M*f,e[5]=y*o+g*c+b*d+M*v,e[6]=y*n+g*l+b*p+M*x,e[7]=y*s+g*u+b*m+M*P,y=r[8],g=r[9],b=r[10],M=r[11],e[8]=y*i+g*a+b*h+M*f,e[9]=y*o+g*c+b*d+M*v,e[10]=y*n+g*l+b*p+M*x,e[11]=y*s+g*u+b*m+M*P,y=r[12],g=r[13],b=r[14],M=r[15],e[12]=y*i+g*a+b*h+M*f,e[13]=y*o+g*c+b*d+M*v,e[14]=y*n+g*l+b*p+M*x,e[15]=y*s+g*u+b*m+M*P,e}function it(e,t,r){var i=r[0],o=r[1],n=r[2],s,a,c,l,u,h,d,p,m,f,v,x;return t===e?(e[12]=t[0]*i+t[4]*o+t[8]*n+t[12],e[13]=t[1]*i+t[5]*o+t[9]*n+t[13],e[14]=t[2]*i+t[6]*o+t[10]*n+t[14],e[15]=t[3]*i+t[7]*o+t[11]*n+t[15]):(s=t[0],a=t[1],c=t[2],l=t[3],u=t[4],h=t[5],d=t[6],p=t[7],m=t[8],f=t[9],v=t[10],x=t[11],e[0]=s,e[1]=a,e[2]=c,e[3]=l,e[4]=u,e[5]=h,e[6]=d,e[7]=p,e[8]=m,e[9]=f,e[10]=v,e[11]=x,e[12]=s*i+u*o+m*n+t[12],e[13]=a*i+h*o+f*n+t[13],e[14]=c*i+d*o+v*n+t[14],e[15]=l*i+p*o+x*n+t[15]),e}function Kt(e,t,r){var i=r[0],o=r[1],n=r[2];return e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e[3]=t[3]*i,e[4]=t[4]*o,e[5]=t[5]*o,e[6]=t[6]*o,e[7]=t[7]*o,e[8]=t[8]*n,e[9]=t[9]*n,e[10]=t[10]*n,e[11]=t[11]*n,e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e}function At(e,t,r){var i=Math.sin(r),o=Math.cos(r),n=t[4],s=t[5],a=t[6],c=t[7],l=t[8],u=t[9],h=t[10],d=t[11];return t!==e&&(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[4]=n*o+l*i,e[5]=s*o+u*i,e[6]=a*o+h*i,e[7]=c*o+d*i,e[8]=l*o-n*i,e[9]=u*o-s*i,e[10]=h*o-a*i,e[11]=d*o-c*i,e}function Ft(e,t,r){var i=Math.sin(r),o=Math.cos(r),n=t[0],s=t[1],a=t[2],c=t[3],l=t[8],u=t[9],h=t[10],d=t[11];return t!==e&&(e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=n*o-l*i,e[1]=s*o-u*i,e[2]=a*o-h*i,e[3]=c*o-d*i,e[8]=n*i+l*o,e[9]=s*i+u*o,e[10]=a*i+h*o,e[11]=c*i+d*o,e}function Bt(e,t,r){var i=Math.sin(r),o=Math.cos(r),n=t[0],s=t[1],a=t[2],c=t[3],l=t[4],u=t[5],h=t[6],d=t[7];return t!==e&&(e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=n*o+l*i,e[1]=s*o+u*i,e[2]=a*o+h*i,e[3]=c*o+d*i,e[4]=l*o-n*i,e[5]=u*o-s*i,e[6]=h*o-a*i,e[7]=d*o-c*i,e}function Qt(e,t,r){var i=t[0],o=t[1],n=t[2],s=t[3],a=i+i,c=o+o,l=n+n,u=i*a,h=i*c,d=i*l,p=o*c,m=o*l,f=n*l,v=s*a,x=s*c,P=s*l;return e[0]=1-(p+f),e[1]=h+P,e[2]=d-x,e[3]=0,e[4]=h-P,e[5]=1-(u+f),e[6]=m+v,e[7]=0,e[8]=d+x,e[9]=m-v,e[10]=1-(u+p),e[11]=0,e[12]=r[0],e[13]=r[1],e[14]=r[2],e[15]=1,e}function Jt(e,t){return e[0]=t[12],e[1]=t[13],e[2]=t[14],e}function te(e,t){var r=t[0],i=t[1],o=t[2],n=t[4],s=t[5],a=t[6],c=t[8],l=t[9],u=t[10];return e[0]=Math.hypot(r,i,o),e[1]=Math.hypot(n,s,a),e[2]=Math.hypot(c,l,u),e}function ee(e,t,r,i){var o=t[0],n=t[1],s=t[2],a=t[3],c=o+o,l=n+n,u=s+s,h=o*c,d=o*l,p=o*u,m=n*l,f=n*u,v=s*u,x=a*c,P=a*l,y=a*u,g=i[0],b=i[1],M=i[2];return e[0]=(1-(m+v))*g,e[1]=(d+y)*g,e[2]=(p-P)*g,e[3]=0,e[4]=(d-y)*b,e[5]=(1-(h+v))*b,e[6]=(f+x)*b,e[7]=0,e[8]=(p+P)*M,e[9]=(f-x)*M,e[10]=(1-(h+m))*M,e[11]=0,e[12]=r[0],e[13]=r[1],e[14]=r[2],e[15]=1,e}function re(e,t){var r=t[0],i=t[1],o=t[2],n=t[3],s=r+r,a=i+i,c=o+o,l=r*s,u=i*s,h=i*a,d=o*s,p=o*a,m=o*c,f=n*s,v=n*a,x=n*c;return e[0]=1-h-m,e[1]=u+x,e[2]=d-v,e[3]=0,e[4]=u-x,e[5]=1-l-m,e[6]=p+f,e[7]=0,e[8]=d+v,e[9]=p-f,e[10]=1-l-h,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function ie(e,t,r,i,o){var n=1/Math.tan(t/2),s;return e[0]=n/r,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=n,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,o!=null&&o!==1/0?(s=1/(i-o),e[10]=(o+i)*s,e[14]=2*o*i*s):(e[10]=-1,e[14]=-2*i),e}var oe=ie;function Ut(e,t,r,i){var o,n,s,a,c,l,u,h,d,p,m=t[0],f=t[1],v=t[2],x=i[0],P=i[1],y=i[2],g=r[0],b=r[1],M=r[2];return Math.abs(m-g)<ct&&Math.abs(f-b)<ct&&Math.abs(v-M)<ct?gt(e):(u=m-g,h=f-b,d=v-M,p=1/Math.hypot(u,h,d),u*=p,h*=p,d*=p,o=P*d-y*h,n=y*u-x*d,s=x*h-P*u,p=Math.hypot(o,n,s),p?(p=1/p,o*=p,n*=p,s*=p):(o=0,n=0,s=0),a=h*s-d*n,c=d*o-u*s,l=u*n-h*o,p=Math.hypot(a,c,l),p?(p=1/p,a*=p,c*=p,l*=p):(a=0,c=0,l=0),e[0]=o,e[1]=a,e[2]=u,e[3]=0,e[4]=n,e[5]=c,e[6]=h,e[7]=0,e[8]=s,e[9]=l,e[10]=d,e[11]=0,e[12]=-(o*m+n*f+s*v),e[13]=-(a*m+c*f+l*v),e[14]=-(u*m+h*f+d*v),e[15]=1,e)}function tt(){var e=new B(3);return B!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e}function ne(e){var t=e[0],r=e[1],i=e[2];return Math.hypot(t,r,i)}function st(e,t,r){var i=new B(3);return i[0]=e,i[1]=t,i[2]=r,i}function se(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e}function ae(e,t){var r=t[0],i=t[1],o=t[2],n=r*r+i*i+o*o;return n>0&&(n=1/Math.sqrt(n)),e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e}function bt(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function nt(e,t,r){var i=t[0],o=t[1],n=t[2],s=r[0],a=r[1],c=r[2];return e[0]=o*c-n*a,e[1]=n*s-i*c,e[2]=i*a-o*s,e}var ce=ne;(function(){var e=tt();return function(t,r,i,o,n,s){var a,c;for(r||(r=3),i||(i=0),o?c=Math.min(o*r+i,t.length):c=t.length,a=i;a<c;a+=r)e[0]=t[a],e[1]=t[a+1],e[2]=t[a+2],n(e,e,s),t[a]=e[0],t[a+1]=e[1],t[a+2]=e[2];return t}})();function Dt(){var e=new B(4);return B!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0,e[3]=0),e}function ue(e){var t=new B(4);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t}function I(e,t,r,i){var o=new B(4);return o[0]=e,o[1]=t,o[2]=r,o[3]=i,o}function Et(e,t,r){return e[0]=t[0]+r[0],e[1]=t[1]+r[1],e[2]=t[2]+r[2],e[3]=t[3]+r[3],e}function Rt(e,t,r){return e[0]=t[0]-r[0],e[1]=t[1]-r[1],e[2]=t[2]-r[2],e[3]=t[3]-r[3],e}function le(e,t,r){return e[0]=t[0]*r[0],e[1]=t[1]*r[1],e[2]=t[2]*r[2],e[3]=t[3]*r[3],e}function he(e,t,r){return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e[3]=t[3]*r,e}function de(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=-t[3],e}function J(e,t){var r=t[0],i=t[1],o=t[2],n=t[3],s=r*r+i*i+o*o+n*n;return s>0&&(s=1/Math.sqrt(s)),e[0]=r*s,e[1]=i*s,e[2]=o*s,e[3]=n*s,e}function E(e,t,r){var i=t[0],o=t[1],n=t[2],s=t[3];return e[0]=r[0]*i+r[4]*o+r[8]*n+r[12]*s,e[1]=r[1]*i+r[5]*o+r[9]*n+r[13]*s,e[2]=r[2]*i+r[6]*o+r[10]*n+r[14]*s,e[3]=r[3]*i+r[7]*o+r[11]*n+r[15]*s,e}(function(){var e=Dt();return function(t,r,i,o,n,s){var a,c;for(r||(r=4),i||(i=0),o?c=Math.min(o*r+i,t.length):c=t.length,a=i;a<c;a+=r)e[0]=t[a],e[1]=t[a+1],e[2]=t[a+2],e[3]=t[a+3],n(e,e,s),t[a]=e[0],t[a+1]=e[1],t[a+2]=e[2],t[a+3]=e[3];return t}})();function ht(){var e=new B(4);return B!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e[3]=1,e}function fe(e,t,r){r=r*.5;var i=Math.sin(r);return e[0]=i*t[0],e[1]=i*t[1],e[2]=i*t[2],e[3]=Math.cos(r),e}function pe(e,t,r){var i=t[0],o=t[1],n=t[2],s=t[3],a=r[0],c=r[1],l=r[2],u=r[3];return e[0]=i*u+s*a+o*l-n*c,e[1]=o*u+s*c+n*a-i*l,e[2]=n*u+s*l+i*c-o*a,e[3]=s*u-i*a-o*c-n*l,e}function ve(e,t,r){r*=.5;var i=t[0],o=t[1],n=t[2],s=t[3],a=Math.sin(r),c=Math.cos(r);return e[0]=i*c+s*a,e[1]=o*c+n*a,e[2]=n*c-o*a,e[3]=s*c-i*a,e}function me(e,t,r){r*=.5;var i=t[0],o=t[1],n=t[2],s=t[3],a=Math.sin(r),c=Math.cos(r);return e[0]=i*c-n*a,e[1]=o*c+s*a,e[2]=n*c+i*a,e[3]=s*c-o*a,e}function ge(e,t,r){r*=.5;var i=t[0],o=t[1],n=t[2],s=t[3],a=Math.sin(r),c=Math.cos(r);return e[0]=i*c+o*a,e[1]=o*c-i*a,e[2]=n*c+s*a,e[3]=s*c-n*a,e}function ft(e,t,r,i){var o=t[0],n=t[1],s=t[2],a=t[3],c=r[0],l=r[1],u=r[2],h=r[3],d,p,m,f,v;return p=o*c+n*l+s*u+a*h,p<0&&(p=-p,c=-c,l=-l,u=-u,h=-h),1-p>ct?(d=Math.acos(p),m=Math.sin(d),f=Math.sin((1-i)*d)/m,v=Math.sin(i*d)/m):(f=1-i,v=i),e[0]=f*o+v*c,e[1]=f*n+v*l,e[2]=f*s+v*u,e[3]=f*a+v*h,e}function K(e,t){var r=t[0],i=t[1],o=t[2],n=t[3],s=r*r+i*i+o*o+n*n,a=s?1/s:0;return e[0]=-r*a,e[1]=-i*a,e[2]=-o*a,e[3]=n*a,e}function Nt(e,t){var r=t[0]+t[4]+t[8],i;if(r>0)i=Math.sqrt(r+1),e[3]=.5*i,i=.5/i,e[0]=(t[5]-t[7])*i,e[1]=(t[6]-t[2])*i,e[2]=(t[1]-t[3])*i;else{var o=0;t[4]>t[0]&&(o=1),t[8]>t[o*3+o]&&(o=2);var n=(o+1)%3,s=(o+2)%3;i=Math.sqrt(t[o*3+o]-t[n*3+n]-t[s*3+s]+1),e[o]=.5*i,i=.5/i,e[3]=(t[n*3+s]-t[s*3+n])*i,e[n]=(t[n*3+o]+t[o*3+n])*i,e[s]=(t[s*3+o]+t[o*3+s])*i}return e}var at=ue,_e=I,Ot=J;(function(){var e=tt(),t=st(1,0,0),r=st(0,1,0);return function(i,o,n){var s=bt(o,n);return s<-.999999?(nt(e,t,o),ce(e)<1e-6&&nt(e,r,o),ae(e,e),fe(i,e,Math.PI),i):s>.999999?(i[0]=0,i[1]=0,i[2]=0,i[3]=1,i):(nt(e,o,n),i[0]=e[0],i[1]=e[1],i[2]=e[2],i[3]=1+s,Ot(i,i))}})();(function(){var e=ht(),t=ht();return function(r,i,o,n,s,a){return ft(e,i,s,a),ft(t,o,n,a),ft(r,e,t,2*a*(1-a)),r}})();(function(){var e=It();return function(t,r,i,o){return e[0]=i[0],e[3]=i[1],e[6]=i[2],e[1]=o[0],e[4]=o[1],e[7]=o[2],e[2]=-r[0],e[5]=-r[1],e[8]=-r[2],Ot(t,Nt(t,e))}})();const ut=class k{constructor(){A(this,"_coord"),A(this,"scale",t=>{const r=new k;return he(r._coord,this._coord,t),r}),A(this,"dot",t=>bt(this.vec3(),t.vec3())),A(this,"add",t=>{const r=new k;return Et(r._coord,this._coord,t._coord),r}),A(this,"multiply",t=>{const r=new k;return le(r._coord,this._coord,t._coord),r}),this._coord=I(0,0,0,0)}static get bufferSize(){return 4*4}static fromValues(t,r,i){const o=new k;return o._coord=I(t,r,i,0),o}static fromVec4(t){const r=new k,i=t[3]!==0?t[3]:1;return r._coord=I(t[0]/i,t[1]/i,t[2]/i,0),r}static fromVec3(t){const r=new k;return r._coord=I(t[0],t[1],t[2],0),r}static fromPoints(t,r){const i=new k;return Rt(i._coord,t.vec4(),r.vec4()),i}static fromPoint(t){const r=new k;return r._coord=[...t.triplet,0],r}toString(){return`Vector(${this.x}, ${this.y}, ${this.z})`}map(t){const r=new k;return t.isFrame()?E(r._coord,this._coord,t.inverseMatrix):E(r._coord,this._coord,t.directMatrix),r}unMap(t){const r=new k;return t.isFrame()?E(r._coord,this._coord,t.directMatrix):E(r._coord,this._coord,t.inverseMatrix),r}relative(t){return this.map(t)}absolute(t){return this.unMap(t)}isUnitVector(){return!1}get x(){return this._coord[0]}get y(){return this._coord[1]}get z(){return this._coord[2]}get triplet(){return[this.x,this.y,this.z]}get coordinates(){return[...this._coord.values()]}buffer(){return new Float32Array(this.coordinates)}get length(){const t=this._coord[0],r=this._coord[1],i=this._coord[2];return Math.sqrt(t*t+r*r+i*i)}get lengthSquare(){const t=this._coord[0],r=this._coord[1],i=this._coord[2];return t*t+r*r+i*i}vec3(){return st(this.x,this.y,this.z)}vec4(){return I(this.x,this.y,this.z,0)}};A(ut,"crossProduct",(e,t)=>{const r=tt();return nt(r,e.vec3(),t.vec3()),ut.fromVec3(r)}),A(ut,"dot",(e,t)=>bt(e.vec3(),t.vec3()));let L=ut;class _{constructor(){A(this,"_coord"),this._coord=I(0,0,0,1)}static get bufferSize(){return 4*4}static origin(){return new _}static fromValues(t,r,i,o=1){const n=new _;return n._coord=I(t/o,r/o,i/o,1),n}static fromVector(t){const r=new _;return r._coord=I(t.x,t.y,t.z,1),r}static fromVec4(t){const r=new _,i=t[3]!==0?t[3]:1;return r._coord=I(t[0]/i,t[1]/i,t[2]/i,1),r}static fromVec3(t){const r=new _;return r._coord=I(t[0],t[1],t[2],1),r}toString(){return`Point(${this.x}, ${this.y}, ${this.z})`}map(t){const r=new _;return t.isFrame()?E(r._coord,this._coord,t.inverseMatrix):E(r._coord,this._coord,t.directMatrix),r}unMap(t){const r=new _;return t.isFrame()?E(r._coord,this._coord,t.directMatrix):E(r._coord,this._coord,t.inverseMatrix),r}relative(t){return this.map(t)}absolute(t){return this.unMap(t)}static relative(t,r){return t.map(r)}static absolute(t,r){return t.unMap(r)}subtract(t){const r=Dt();return Rt(r,this._coord,t._coord),L.fromVec4(r)}scale(t){const r=tt();return se(r,this.vec3(),t),_.fromVec3(r)}add(t){const r=new _;return Et(r._coord,this._coord,t.vec4()),r}isPoint(){return!0}get x(){return this._coord[0]}get y(){return this._coord[1]}get z(){return this._coord[2]}get coordinates(){return[...this._coord.values()]}get triplet(){return[this.x,this.y,this.z]}buffer(){return new Float32Array(this.coordinates)}vec3(){return st(this.x,this.y,this.z)}vec4(){return I(this.x,this.y,this.z,1)}}const yt=class H{constructor(){A(this,"_coord"),this._coord=I(1,1,1,0)}static get bufferSize(){return 4*4}static fromVector(t){const r=new H;return r._coord=I(t.x,t.y,t.z,0),J(r._coord,r._coord),r}static fromPoints(t,r){const i=new H;return i._coord=I(t.x-r.x,t.y-r.y,t.z-r.z,0),J(i._coord,i._coord),i}fromPoint(t){return H.fromValues(...t.triplet)}static fromValues(t,r,i){const o=I(t,r,i,0);return J(o,o),H.fromVec4(o)}static fromVec4(t){const r=new H,i=t[3]!==0?t[3]:1;return r._coord=I(t[0]/i,t[1]/i,t[2]/i,0),J(r._coord,r._coord),r}static fromVec3(t){const r=new H;return r._coord=I(t[0],t[1],t[2],0),J(r._coord,r._coord),r}toString(){return`UnitVector(${this.x}, ${this.y}, ${this.z})`}map(t){const r=new H;return t.isFrame()?E(r._coord,this._coord,t.inverseMatrix):E(r._coord,this._coord,t.directMatrix),J(r._coord,r._coord),r}unMap(t){const r=new H;return t.isFrame()?E(r._coord,this._coord,t.directMatrix):E(r._coord,this._coord,t.inverseMatrix),J(r._coord,r._coord),r}relative(t){return this.map(t)}absolute(t){return this.unMap(t)}invert(){const t=new H;return de(t._coord,this._coord),t}scale(t){return L.fromValues(this.x*t,this.y*t,this.z*t)}isUnitVector(){return!0}get x(){return this._coord[0]}get y(){return this._coord[1]}get z(){return this._coord[2]}get length(){return 1}get coordinates(){return[...this._coord.values()]}get triplet(){return[this.x,this.y,this.z]}buffer(){return new Float32Array(this.coordinates)}vec3(){return st(this.x,this.y,this.z)}};A(yt,"crossProduct",(e,t)=>{const r=tt();return nt(r,e.vec3(),t.vec3()),yt.fromVec3(r)});let V=yt;const Vt=e=>e.isUnitVector();class w{constructor(){A(this,"_direct"),A(this,"_inverse"),A(this,"_isIdentity",!0),this._direct=W(),this._inverse=W(),z(this._inverse,this._direct)}static get bufferSize(){return 16*4}static world(){return new w}static identity(){return new w}static fromRotation(t){const r=new w;return re(r._direct,t.quat),z(r._inverse,r._direct),r._isIdentity=!1,r}static fromMat4(t){const r=new w,i=W();return z(i,t),r._direct=j(t),r._inverse=j(i),r._isIdentity=!1,r}static lookAt(t,r,i){const o=new w;return Ut(o._direct,t.vec3(),r.vec3(),i.vec3()),z(o._inverse,o._direct),o._isIdentity=!1,o}static perspective(t,r,i,o){const n=new w;return oe(n._direct,t,r,i,o),z(n._inverse,n._direct),n._isIdentity=!1,n}static invert(t){const r=new w;return r._direct=j(t._inverse),r._inverse=j(t._direct),r._isIdentity=!1,r}static translation(t,r,i){const o=new w;return it(o._direct,o._direct,[t,r,i]),z(o._inverse,o._direct),o._isIdentity=!1,o}static move(t){const r=new w;return it(r._direct,r._direct,t.vec3()),z(r._inverse,r._direct),r._isIdentity=!1,r}static rotationX(t){const r=new w;return At(r._direct,r._direct,t),z(r._inverse,r._direct),r._isIdentity=!1,r}static rotationY(t){const r=new w;return Ft(r._direct,r._direct,t),z(r._inverse,r._direct),r._isIdentity=!1,r}static rotationZ(t){const r=new w;return Bt(r._direct,r._direct,t),z(r._inverse,r._direct),r._isIdentity=!1,r}static scale(t,r,i){const o=new w;return Kt(o._direct,o._direct,[t,r,i]),z(o._inverse,o._direct),o._isIdentity=!1,o}static rotoTranslation(t,r){const i=new w;return Qt(i._direct,t.quat,r.vec3()),z(i._inverse,i._direct),i._isIdentity=!1,i}static fromRotationTranslationScale(t,r,i){const o=new w;return ee(o._direct,t.quat,r.vec3(),i.vec3()),z(o._inverse,o._direct),o._isIdentity=!1,o}isFrame(){return!1}get values(){return this._direct.values()}get inverseValues(){return this._inverse.values()}buffer(){return new Float32Array(this._direct.values())}inverseBuffer(){return new Float32Array(this._inverse.values())}apply(t){return t.map(this)}compose(t){const r=new w,{_direct:i,_inverse:o}=this,{_direct:n,_inverse:s}=t;return _t(r._direct,n,i),_t(r._inverse,o,s),r._isIdentity=!1,r}transpose(){const t=new w;return Wt(t._direct,this._direct),z(t._inverse,t._direct),t._isIdentity=!1,t}translation(t,r,i){const o=w.translation(t,r,i);return this.compose(o)}rotationX(t){const r=w.rotationX(t);return this.compose(r)}rotationY(t){const r=w.rotationY(t);return this.compose(r)}rotationZ(t){const r=w.rotationZ(t);return this.compose(r)}scale(t,r,i){const o=w.scale(t,r,i);return this.compose(o)}invert(){const t=new w;return t._direct=j(this._inverse),t._inverse=j(this._direct),t._isIdentity=this._isIdentity,t}get directMatrix(){return this._direct}get inverseMatrix(){return this._inverse}get isIdentity(){return this._isIdentity}get scaleVector(){const t=tt();return te(t,this._direct),L.fromValues(t[0],t[1],t[2])}get positionVector(){const t=tt();return Jt(t,this._direct),L.fromValues(t[0],t[1],t[2])}}const wt=class Y{constructor(){A(this,"_direct"),A(this,"_inverse"),this._direct=W(),this._inverse=W(),gt(this._direct),gt(this._inverse)}static bufferSize(){return 16*4}static world(){return new Y}static translation(t){const r=new Y,i=W();return it(i,i,t.vec3()),r._inverse=i,z(r._direct,r._inverse),r}static rotationX(t,r){const i=new Y,o=W();return it(o,o,t.vec3()),At(o,o,r),i._direct=o,z(i._inverse,i._direct),i}static rotationY(t,r){const i=new Y,o=W();return it(o,o,t.vec3()),Ft(o,o,r),i._direct=o,z(i._inverse,i._direct),i}static rotationZ(t,r){const i=new Y,o=W();return it(o,o,t.vec3()),Bt(o,o,r),i._direct=o,z(i._inverse,i._direct),i}static lookAt(t,r,i){const o=new Y;return Ut(o._inverse,t.vec3(),r.vec3(),i.vec3()),z(o._direct,o._inverse),o}isFrame(){return!0}toString(){return`Frame(${this.origin}, ${this.i}, ${this.j}, ${this.k})`}map(t){return this.compose(t)}unMap(t){return this.invert().compose(t)}compose(t){const r=new Y,{_direct:i}=this,{_direct:o}=t;return _t(r._direct,o,i),z(r._inverse,r._direct),r}toTransform(){return w.fromMat4(this._inverse)}invert(){const t=new Y;return t._direct=j(this._inverse),t._inverse=j(this._direct),t}get directMatrix(){return j(this._direct)}get inverseMatrix(){return j(this._inverse)}get i(){return V.fromValues(this._direct[0],this._direct[1],this._direct[2])}get j(){return V.fromValues(this._direct[4],this._direct[5],this._direct[6])}get k(){return V.fromValues(this._direct[8],this._direct[9],this._direct[10])}get o(){return _.fromValues(this._direct[12],this._direct[13],this._direct[14],this._direct[15])}get origin(){return _.fromValues(this._inverse[12],this._inverse[13],this._inverse[14],this._inverse[15])}relative(t){if(t&&ye(t)){const r=this.origin.relative(t),i=this.k.relative(t),o=this.i.relative(t);return Y.from2Vectors(r,i,o)}return t.relative(this)}};A(wt,"from2Vectors",(e,t,r)=>{const i=new wt,o=Vt(t)?t:V.fromVector(t),n=V.crossProduct(o,Vt(r)?r:V.fromVector(r)),s=[...V.crossProduct(n,o).coordinates,...n.coordinates,...o.coordinates,...e.coordinates];return i._direct=Xt(...s),z(i._inverse,i._direct),i});let xt=wt;const ye=e=>e&&e.isFrame!==void 0?e.isFrame():!1;class T{constructor(){A(this,"_direct"),A(this,"_inverse"),this._direct=ht(),this._inverse=ht()}static identity(){return new T}static fromValues(t,r,i,o){const n=new T;return n._direct=_e(t,r,i,o),K(n._inverse,n._direct),n}static fromAngles(t,r,i){return T.rotationX(t).rotateY(r).rotateZ(i)}static fromQuat(t){const r=new T;return r._direct=at(t),K(r._inverse,r._direct),r}static fromArray(t){const r=new T;return r._direct=at(t),K(r._inverse,r._direct),r}static fromTransform(t){const r=It();jt(r,t.directMatrix);const i=new T;return i._direct=Nt(i._direct,r),K(i._inverse,i._direct),i}static rotationX(t){const r=new T;return ve(r._direct,r._direct,t),K(r._inverse,r._direct),r}static rotationY(t){const r=new T;return me(r._direct,r._direct,t),K(r._inverse,r._direct),r}static rotationZ(t){const r=new T;return ge(r._direct,r._direct,t),K(r._inverse,r._direct),r}rotateX(t){const r=new T;return r._direct=this._direct,r._inverse=this._inverse,r.compose(T.rotationX(t)),r}rotateY(t){const r=new T;return r._direct=this._direct,r._inverse=this._inverse,r.compose(T.rotationY(t)),r}rotateZ(t){const r=new T;return r._direct=this._direct,r._inverse=this._inverse,r.compose(T.rotationZ(t)),r}inverse(){const t=new T;return t._direct=at(this._inverse),t._inverse=at(this._direct),t}compose(t){const r=new T;return pe(r._direct,this._direct,t._direct),K(r._inverse,r._direct),r}get quat(){return this._direct}}const q=e=>e/180*Math.PI;var we=Object.defineProperty,xe=(e,t,r)=>t in e?we(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,S=(e,t,r)=>(xe(e,typeof t!="symbol"?t+"":t,r),r);const Pt=()=>{let e=0,t=performance.now(),r=0;const i=[];return{getFPS:()=>i.reduce((o,n)=>o+n,0)/i.length,measureFPS:()=>(e=performance.now()-t,e<=1?i[r]:(r=(r+1)%10,i[r]=1e3/e,t=performance.now(),e)),getLastTimeSpan:()=>e}},be=async({context:e,device:t,format:r},i)=>{e.configure({device:t,format:r,alphaMode:"opaque"});const o=t.createShaderModule({code:i});return(await o.getCompilationInfo()).messages.forEach(n=>{let s=n.message;n.lineNum&&(s=`Line ${n.lineNum}:${n.linePos} - "${i.substr(n.offset,n.length+40)}"
`+n.message),console.error("WGSL error: ",s)}),o},Me=(e,t,r=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST)=>{const i=e.createBuffer({size:t.byteLength,usage:r,mappedAtCreation:!0});return new Float32Array(i.getMappedRange()).set(t),i.unmap(),i},St=e=>{const{device:t,canvas:r}=e,i=t.createTexture({size:{width:r.width,height:r.height,depthOrArrayLayers:1},sampleCount:1,format:e.format,usage:GPUTextureUsage.RENDER_ATTACHMENT}),o=t.createTexture({label:"DepthTexture",sampleCount:1,size:[r.width,r.height,1],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT}),n=Re(window.getComputedStyle(r).backgroundColor);return{colorAttachments:[{view:i.createView(),clearValue:n,loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:o.createView(),depthClearValue:1,depthStoreOp:"store",depthLoadOp:"clear"}}},Ve=async e=>{const t=await navigator.gpu.requestAdapter({powerPreference:"high-performance"});if(!t)throw new Error("WebGPU:adapter is NOT available!");const r=await t.requestDevice();if(!r)throw new Error("WebGPU:device is NOT available!");const i=e.getContext("webgpu");if(!i)throw new Error("WebGPU:context from instantiated Canvas not available!");const o=navigator.gpu.getPreferredCanvasFormat();i.configure({device:r,format:o,usage:GPUTextureUsage.RENDER_ATTACHMENT,alphaMode:"opaque"});const n=await t.requestAdapterInfo();return console.info("WebGPU: adapter:",n),console.info("WebGPU: fallback adapter:",t.isFallbackAdapter),console.info("WegGPU: maxBindGroups:",r.limits.maxBindGroups),{context:i,device:r,canvas:e,format:o}},Pe=e=>typeof e=="string",Se=(e,[t,r],i)=>({view:i&&i.view?i.view(e.view):w.lookAt(_.fromValues(-5,-5,-5),_.fromValues(0,0,0),V.fromValues(0,0,1)),projection:i&&i.projection?i.projection(e.projection):w.perspective(Math.PI/5,t/r,.1,100)}),Te=e=>e!==null,Ce=e=>{const t=3*w.bufferSize+8+4*(2*L.bufferSize)+4*(L.bufferSize+_.bufferSize),r=4,i=r*(2*L.bufferSize)+r*(L.bufferSize+_.bufferSize)+4*4,o=e.device.createBuffer({label:"TransBuffer",size:t+t%16,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),n=e.device.createBuffer({label:"LightBuffer",size:i+i%16,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),s=[{binding:0,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,buffer:{type:"uniform"}},{binding:1,visibility:GPUShaderStage.FRAGMENT,buffer:{type:"uniform"}}],a=e.device.createBindGroupLayout({label:"transformations",entries:s}),c=[{binding:0,resource:{buffer:o}},{binding:1,resource:{buffer:n}}],l=e.device.createBindGroup({label:"SceneData",layout:a,entries:c});return[a,l,[o,n]]},Le=e=>{const t=2*w.bufferSize,r=e.device.createBuffer({label:"TransBuffer",size:t+t%16,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),i=[{binding:0,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,buffer:{type:"uniform"}}],o=e.device.createBindGroupLayout({label:"modelTransf",entries:i}),n=[{binding:0,resource:{buffer:r}}],s=e.device.createBindGroup({label:"SceneData",layout:o,entries:n});return[o,s,[r]]},ze=e=>{const t=e.device.createBuffer({size:16,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),r=e.device.createBuffer({size:4,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),i=[{binding:0,visibility:GPUShaderStage.FRAGMENT,buffer:{type:"uniform"}},{binding:1,visibility:GPUShaderStage.FRAGMENT,buffer:{type:"uniform"}}],o=e.device.createBindGroupLayout({label:"color",entries:i}),n=[{binding:0,resource:{buffer:t}},{binding:1,resource:{buffer:r}}],s=e.device.createBindGroup({label:"color",layout:o,entries:n});return[o,s,[t,r]]},Ge=(e,t)=>{const{device:r}=e,i={addressModeU:"repeat",addressModeV:"repeat",magFilter:"linear",minFilter:"nearest",mipmapFilter:"linear",maxAnisotropy:1},o=r.createSampler(i),n=t.views.filter(Te),s=[...n.map((u,h)=>({binding:h,visibility:GPUShaderStage.FRAGMENT,texture:{sampleType:"float"}})),{binding:4,visibility:GPUShaderStage.FRAGMENT,sampler:{type:"filtering"}}],a=e.device.createBindGroupLayout({label:"texture",entries:s}),c=[...n.map((u,h)=>({binding:h,resource:u})),{binding:4,resource:o}],l=e.device.createBindGroup({label:"texture",layout:a,entries:c});return[a,l]},Ie=(e,t)=>{const{device:r}=e,[i,o,n]=Ce(e),[s,a,c]=ze(e),[l,u,h]=Le(e),[d,p]=t?Ge(e,t):[void 0,void 0],m=d?[i,s,l,d]:[i,s,l],f={sceneGroup:o,colorGroup:a,modelGroup:u,texturesGroup:p},v={sceneBuffers:n,colorBuffers:c,modelBuffers:h};return[r.createPipelineLayout({bindGroupLayouts:m}),f,v]},Tt=(e,t,r)=>{const{device:i,format:o}=e,n=r.map(s=>{const[a,c,l]=Ie(e,s.material),u={label:s.label,layout:a,multisample:{count:1},vertex:{module:t,entryPoint:s.vertexShader,buffers:[s.bufferLayout]},fragment:{module:t,entryPoint:s.fragmentShader,targets:[{format:o,blend:{color:{srcFactor:"src-alpha",dstFactor:"one-minus-src-alpha",operation:"add"},alpha:{srcFactor:"src-alpha",dstFactor:"one-minus-src-alpha",operation:"add"}}}]},primitive:{topology:s.primitives,cullMode:s.cullMode},depthStencil:{depthWriteEnabled:!0,depthCompare:"less",format:"depth24plus"}},h=i.createRenderPipeline(u),d={...u,label:`${s.label}-alt`,primitive:{topology:"line-list",cullMode:"none"}},p=i.createRenderPipeline(d);return[s.id,{id:s.id,type:s.label,pipeline:h,altPipeline:p,geoRenderable:s,uniformBuffers:l,bindGroups:c}]});return new Map(n)},Ae=(e,t)=>{let r="none",i=[0,0],o=[0,0],n=[0,0];e.addEventListener("contextmenu",s=>{s.preventDefault()}),e.addEventListener("wheel",s=>{s.ctrlKey?t.tilt(s.deltaY):t.zoom(s.deltaY)}),e.addEventListener("pointerdown",s=>{e.setPointerCapture(s.pointerId),i=[s.offsetX,s.offsetY],o=[0,0],n=i,r=`${s.ctrlKey?"ctrl-":""}mouse-${s.button}`,t.move(r,{origin:i,direction:o},n)}),e.addEventListener("pointermove",s=>{if(r==="none")return;const a=[s.offsetX,s.offsetY];o=[a[0]-n[0],a[1]-n[1]],n=a,t.move(r,{origin:i,direction:o},n)}),e.addEventListener("pointerup",s=>{e.releasePointerCapture(s.pointerId);const a=[s.offsetX,s.offsetY];o=[a[0]-i[0],a[1]-i[1]],o[0]<=.9&&o[1]<=.9&&t.click("none",a),t.move("none",{origin:i,direction:o},a),r="none"})},Fe=`const MAX_DIR_LIGHTS: u32 = 4;
const MAX_POINT_LIGHTS: u32 = 4;

struct DirectionalLight {
  dir: vec4<f32>,
  col: vec4<f32>,
};

struct PointLight {
  pos: vec4<f32>,  // Position of the light
  col: vec4<f32>,  // Color of the light
};

struct SceneData {
  view: mat4x4<f32>,
  invertView: mat4x4<f32>,
  projection: mat4x4<f32>,
};

struct ModelData {
  model: mat4x4<f32>,
  modelInverseTranspose: mat4x4<f32>,
};

struct SceneLights {
  dirLights: array<DirectionalLight, MAX_DIR_LIGHTS>,
  pointLights: array<PointLight, MAX_POINT_LIGHTS>,
  ambient: vec4<f32>,
};

struct ObjectData {
  model: mat4x4<f32>,
};

struct TextFragment {
  @builtin(position) position: vec4<f32>,
  @location(0) texCoord: vec2<f32>,
  @location(1) normal: vec3<f32>,
  @location(2) pos: vec3<f32>,
  @location(3) eye: vec3<f32>,
};

struct ColorFragment {
  @builtin(position) position: vec4<f32>,
  @location(0) normal: vec3<f32>,
  @location(1) pos: vec3<f32>,
  @location(2) eye: vec3<f32>,
  @location(3) viewZ: f32,
};

struct ColorLineFragment {
  @builtin(position) position: vec4<f32>,
  @location(0) viewZ: f32,
  @location(1) targetZ: f32,
  @location(2) color: vec4<f32>,
};

struct ColorData {
    color: vec4<f32>,
};

struct TextureAlpha {
    value: f32
};

@group(0) @binding(0) var<uniform> sceneData: SceneData;
@group(0) @binding(1) var<uniform> sceneLights: SceneLights;
@group(1) @binding(0) var<uniform> myColor: ColorData;
@group(1) @binding(1) var<uniform> textureAlpha: TextureAlpha;
@group(2) @binding(0) var<uniform> myModel: ModelData;
@group(3) @binding(0) var myTexture0: texture_2d<f32>;
@group(3) @binding(1) var myTexture1: texture_2d<f32>;
@group(3) @binding(2) var myTexture2: texture_2d<f32>;
@group(3) @binding(3) var myTexture3: texture_2d<f32>;
@group(3) @binding(4) var mySampler: sampler;

fn computeDiffuseColor(
    eye: vec3<f32>,
    pos: vec3<f32>,
    normal: vec3<f32>,
    sceneLights: SceneLights) -> vec3<f32> {
  let shininess: f32 = 64.0;
  var diffuse: vec3<f32> = sceneLights.ambient.rgb;
  for (var i: u32 = 0; i < MAX_DIR_LIGHTS; i = i + 1) {
    if (sceneLights.dirLights[i].col.a != 0.0) {
      let lightDir: vec3<f32> = -normalize(sceneLights.dirLights[i].dir.xyz); //
      let lightColor: vec3<f32> = sceneLights.dirLights[i].col.rgb;
      var NdotL: f32 = pow(max(dot(normal, lightDir), 0), 2);
      diffuse = diffuse + (NdotL * lightColor);
    }
  }
  for (var i: u32 = 0; i < MAX_POINT_LIGHTS; i = i + 1) {
    if (sceneLights.pointLights[i].col.a != 0.0) {
      let dir = sceneLights.pointLights[i].pos.xyz - pos; //  - pos.xyz;
      let attenuation = 1.0 - clamp(pow( length(dir)/20, 2.0), 0.0, 1.0 );

      let lightDir: vec3<f32> = normalize(dir);
      let lightColor: vec3<f32> = sceneLights.pointLights[i].col.rgb;
      var NdotL: f32 = pow(max(dot(normal, lightDir), 0), 2);
      let diffuseColor = NdotL * lightColor;

      // Specular
      let V = normalize(pos - eye);
      let R = normalize(reflect(lightDir, normal));
      let specularIntensity = pow(max(dot(V, R), 0.0), shininess);
      let specularColor = specularIntensity * lightColor;

      diffuse = diffuse + (diffuseColor+ specularColor) * attenuation;
    }
  }
  return clamp(diffuse, vec3<f32>(0.0, 0.0, 0.0), vec3<f32>(1.0, 1.0, 1.0));
}


// ----------------------------------------------------------------------------------------------- Texture Shaders

@vertex
fn vertexTextureShader(
    @location(0) vertexPosition: vec3<f32>,
    @location(1) vertexTexCoord: vec2<f32>,
    @location(2) vertexNormal: vec3<f32>) -> TextFragment {
  var output: TextFragment;
  var vertex = myModel.model * vec4<f32>(vertexPosition, 1.0);
  output.position = sceneData.projection * sceneData.view * vertex;
  output.texCoord = vec2<f32>(vertexTexCoord);
  output.normal = normalize((myModel.modelInverseTranspose * vec4<f32>(vertexNormal, 0.0)).xyz);
  output.pos = vertex.xyz;
  output.eye = sceneData.invertView[3].xyz;

  return output;
}

@fragment
fn fragmentTextureShader(in: TextFragment) -> @location(0) vec4<f32> {
  let diffuse: vec3<f32> = computeDiffuseColor( in.eye, in.pos, in.normal, sceneLights );
  let texColor: vec4<f32> = textureSample(myTexture0, mySampler, in.texCoord);

  let textMix = vec4<f32>(1-textureAlpha.value);
  let finalColor = mix(texColor, myColor.color, textMix); // mixed the two colors based on alpha.
  return vec4<f32>(finalColor.rgb * diffuse, max(finalColor.a, texColor.a));
}

// ----------------------------------------------------------------------------------------------- Color Shaders

@vertex
fn vertexColorShader(
    @location(0) vertexPosition: vec3<f32>,
    @location(1) vertexNormal: vec3<f32>) -> ColorFragment {
  var output: ColorFragment;
  var vertex = myModel.model * vec4<f32>(vertexPosition, 1.0);
  var positionInViewSpace = sceneData.view * vertex;
  var bias = 0.002 * positionInViewSpace.z;

  var biasedPositionInViewSpace = positionInViewSpace - vec4<f32>(0.0, 0.0, bias, 0.0);

  output.normal = normalize((myModel.modelInverseTranspose * vec4<f32>(vertexNormal, 0.0)).xyz);
  output.position = sceneData.projection * sceneData.view * vertex;
  output.pos = vertex.xyz;
  output.eye = sceneData.invertView[3].xyz;
  output.viewZ = -biasedPositionInViewSpace.z;

  return output;
}

@fragment
fn fragmentColorShader(in: ColorFragment) -> @location(0) vec4<f32> {
  let diffuse: vec3<f32> = computeDiffuseColor( in.eye, in.pos, in.normal, sceneLights );
  let att: f32 =  1.0 - clamp(in.viewZ / 1000, 0.2, 1.0); // TODO: get the 100 from the scene data

  return vec4<f32>(myColor.color.rgb * diffuse.rgb * att, myColor.color.a);
}


@vertex
fn vertexLineShader(
  @location(0) vertexPosition: vec3<f32>,
  @location(1) vertexColor: vec4<f32>
) -> ColorLineFragment {
  var output: ColorLineFragment;
  var vertex = myModel.model * vec4<f32>(vertexPosition, 1.0);

  let eye  = vec4<f32>(sceneData.invertView[3].xyz, 1.0);

  let eyeInViewSpace = sceneData.view * eye;
  let positionInViewSpace = sceneData.view * vertex;
  let bias = 0.002 * positionInViewSpace.z;
  let biasedPositionInViewSpace = positionInViewSpace - vec4<f32>(0.0, 0.0, bias, 0.0);
  output.viewZ = -biasedPositionInViewSpace.z;
  output.targetZ = eyeInViewSpace.z;
  output.position = sceneData.projection * biasedPositionInViewSpace;
  output.color = vertexColor;

  return output;
}


@fragment
fn fragmentLineShader(in: ColorLineFragment) -> @location(0) vec4<f32> {
  let att: f32 =  1.0 - clamp(in.viewZ / 1000, 0.0, 1.0); // TODO: get the 1000 from the scene data

  return vec4<f32>(in.color.rgb, in.color.a * att);
}
`,Be="",Ue=e=>{const{canvas:t,context:r,device:i}=e;let[o,n]=[t.width,t.height];return new ResizeObserver(s=>{const{width:a,height:c}=s[0].contentRect;[o,n]=[Math.round(a),Math.round(c)]}).observe(t.parentElement),s=>{if(o===t.width&&n===t.height){const h=r.getCurrentTexture(),d=s.colorAttachments;return d[0].view=h.createView({label:"ColorView"}),s}t.width=o,t.height=n;const a=i.createTexture({label:"DepthTexture",sampleCount:1,size:[o,n,1],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT}),c=i.createTexture({label:"ColorTexture",size:{width:o,height:n,depthOrArrayLayers:1},sampleCount:1,format:"bgra8unorm",usage:GPUTextureUsage.RENDER_ATTACHMENT}),l=s.colorAttachments;l[0].view=c.createView({label:"ColorView"});const u=s.depthStencilAttachment;return u.view=a.createView({label:"DepthView"}),s}};class Mt{constructor(t,r,i,o){S(this,"canvas"),S(this,"context"),S(this,"device"),S(this,"format"),S(this,"_handleOnRender"),S(this,"_vertexCount",0),S(this,"_activeRenderLoop",!1),S(this,"_pipelineMode","default"),S(this,"_shaderModule"),S(this,"_pipelines",new Map),S(this,"_transformations",{projection:w.identity(),view:w.identity()}),S(this,"_renderPassDescription"),S(this,"_cameraTransHandler"),S(this,"_lightsHandler"),S(this,"_modelHandlers",{}),S(this,"_fps",Pt()),S(this,"_rebuildViewTexture"),S(this,"_ambientLight",[.3,.3,.3,1]),S(this,"_dirLights",[{dir:V.fromValues(0,0,1),col:[.4,.4,.4,1]},{dir:V.fromValues(1,1,1),col:[.4,.3,.3,0]},{dir:V.fromValues(1,0,0),col:[.5,.5,.5,0]},{dir:V.fromValues(-1,-1,-1),col:[.3,.3,.3,0]}]),S(this,"_pointLights",[{pos:_.fromValues(-12,12,8),col:[.5,.5,.2,0]},{pos:_.fromValues(12,12,8),col:[.4,.2,.2,0]},{pos:_.fromValues(-12,-12,8),col:[.2,.2,.5,0]},{pos:_.fromValues(12,-12,8),col:[.5,.1,.5,0]}]),S(this,"render",()=>{const{device:n}=this;this._vertexCount=0,this._handleOnRender&&this._handleOnRender(this);let s=this._renderPassDescription??St(this);this._rebuildViewTexture&&(this._renderPassDescription=this._rebuildViewTexture(s));const a=n.createCommandEncoder(),c=a.beginRenderPass(s),l=this._fps.getLastTimeSpan();this.updateLights(l),this.pipelines.filter(({geoRenderable:u})=>u.colors[0][3]===1).forEach((u,h)=>{this.renderPipeline(u,h,c,l)}),this.pipelines.filter(({geoRenderable:u})=>u.colors[0][3]<1).forEach((u,h)=>{this.renderPipeline(u,h,c,l)}),c.end(),n.queue.submit([a.finish()])}),this.canvas=t,this.context=r,this.device=i,this.format=o,this._rebuildViewTexture=Ue(this),this.device.lost.then(()=>{console.log("WebGPU:device lost")})}get vertexCount(){return this._vertexCount}get fps(){return this._fps.getFPS()}get dirLights(){return this._dirLights}get pontLights(){return this._pointLights}setAmbientLight(t){this._ambientLight=t}setLight(t,r,i){switch(t){case"directional":this._dirLights[r]=i;break;case"point":this._pointLights[r]=i;break}}static async build(t){return Ve(t).then(({canvas:r,context:i,device:o,format:n})=>new Mt(r,i,o,n))}setPipelineMode(t){this._pipelineMode=t}get pipelines(){return[...this._pipelines.values()]}getScene(){return[...this._pipelines.values()].map(({geoRenderable:t})=>t)}async setupShaders(t){if(this._shaderModule)return this;let r;if(Pe(t))switch(t){case"standard-3d":r=Fe;break;case"standard-2d":default:r=Be;break}else r=t.source;return this._shaderModule=await be(this,r),this}setScene(t){if(!this._shaderModule)throw new Error("WebGPU:shader module is NOT available!");t.forEach(r=>{r.buildGpuBuffer(this)}),this._pipelines=Tt(this,this._shaderModule,t),this._renderPassDescription=St(this)}addToScene(t){if(!this._shaderModule)throw new Error("WebGPU:shader module is NOT available!");t.forEach(r=>{r.buildGpuBuffer(this)}),Tt(this,this._shaderModule,t).forEach((r,i)=>{this._pipelines.set(i,r)})}removeFromScene(t){return this._pipelines.delete(t)}clearScene(){this._pipelines.clear()}captureMouseMotion(t){Ae(this.canvas,{move:(t==null?void 0:t.move)??((r,i,o)=>{}),click:(t==null?void 0:t.click)??((r,i)=>{}),zoom:(t==null?void 0:t.zoom)??(r=>{}),tilt:(t==null?void 0:t.tilt)??(r=>{})})}sceneIntoBuffer(t){const{device:r}=this,{projection:i,view:o}=this._transformations,n=o.invert();let s=0;r.queue.writeBuffer(t[0],s,o.buffer()),s+=w.bufferSize,r.queue.writeBuffer(t[0],s,n.buffer()),s+=w.bufferSize,r.queue.writeBuffer(t[0],s,i.buffer()),s+=w.bufferSize;let a=0;const c=new Float32Array(this._dirLights.flatMap(({dir:h,col:d})=>[...h.coordinates,...d]));r.queue.writeBuffer(t[1],a,c),a+=c.byteLength;const l=new Float32Array(this._pointLights.flatMap(({pos:h,col:d})=>[...h.coordinates,...d]));r.queue.writeBuffer(t[1],a,l),a+=l.byteLength;const u=new Float32Array(this._ambientLight);r.queue.writeBuffer(t[1],a,u)}updateLights(t){if(!this._lightsHandler)return;const{dirLights:r,posLights:i}=this._lightsHandler;r&&r(t,this._dirLights),i&&i(t,this._pointLights)}onRender(t){this._handleOnRender=t}renderPipeline(t,r,i,o){const{pipeline:n,altPipeline:s,uniformBuffers:a,bindGroups:c,geoRenderable:l}=t,{device:u}=this;r===0&&(this.sceneIntoBuffer(a.sceneBuffers),i.setBindGroup(0,c.sceneGroup));const h=this._pipelineMode==="default"?n:s;i.setPipeline(h),this._modelHandlers[l.id]&&l.transform(o,this._modelHandlers[l.id]),u.queue.writeBuffer(a.modelBuffers[0],0,l.transformationData),i.setBindGroup(2,c.modelGroup),c.texturesGroup&&i.setBindGroup(3,c.texturesGroup),l.buffers.forEach((d,p)=>{const m=new Float32Array(l.colors[p]);u.queue.writeBuffer(a.colorBuffers[0],0,m),u.queue.writeBuffer(a.colorBuffers[1],0,new Float32Array([l.textureAlpha])),i.setBindGroup(1,c.colorGroup);const f=l.getVertexCountPerStrip(p);this._vertexCount+=f,i.setVertexBuffer(0,d),i.draw(f)})}renderLoop(){const{width:t,height:r}=this.canvas;this._transformations=Se(this._transformations,[t,r],this._cameraTransHandler),this.render(),this._fps.measureFPS(),this._activeRenderLoop&&requestAnimationFrame(this.renderLoop.bind(this))}beginRenderLoop(t){this._fps=Pt(),this._cameraTransHandler=t==null?void 0:t.camera,this._lightsHandler=t==null?void 0:t.lights,this._modelHandlers=(t==null?void 0:t.models)??{},this._activeRenderLoop=!0,this.renderLoop()}endRenderLoop(){this._activeRenderLoop=!1}}let ot=new Map;const De=async e=>{var t,r;if(!navigator.gpu)return Promise.reject(new Error("WebGPU is not supported in this browser!"));const i=(t=ot.get(e.id))==null?void 0:t.gpu;if(i)return Promise.resolve(i);if((r=ot.get(e.id))!=null&&r.initializing)return new Promise((n,s)=>{setTimeout(()=>{var a;const c=(a=ot.get(e.id))==null?void 0:a.gpu;if(c)return console.warn("WebGPU connection already initialized. Reusing previous connection."),n(c);s(new Error("WebGPU already initialization is taking too long!"))},100)});ot.set(e.id,{initializing:!0});const o=await Mt.build(e);return ot.set(e.id,{initializing:!1,gpu:o}),Promise.resolve(o)},Ee=(e,t,r)=>{const{device:i}=e,o="rgba8unorm",n={label:t,size:[r.width,r.height,1],format:o,usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT},s=i.createTexture(n);i.queue.copyExternalImageToTexture({source:r},{texture:s},[r.width,r.height]);const a=s.createView({label:`${t}-view`});return{name:t,textures:[s],views:[a]}},Re=e=>{let t=[];const r=/rgba?\(([^)]+)\)/.exec(e);if(r&&r[1]&&(t=r[1].split(",").map(a=>parseFloat(a.trim()))),t.length<3)throw new Error("Invalid RGB/RGBA format");const i=t[0]/255,o=t[1]/255,n=t[2]/255,s=t.length===4?t[3]:1;return{r:i,g:o,b:n,a:s}},Ne=async(e,t)=>{const r=new URL(t,window.location.href);return new Promise((i,o)=>{const n=new Image;n.src=r.href,n.onerror=s=>{o(s)},n.onload=()=>{createImageBitmap(n).then(s=>Ee(e,r.pathname,s)).then(s=>i([e,s]))}})},Oe=async(e,t)=>Promise.all(t.map(r=>Ne(e,r))).then(r=>Promise.resolve([e,r.map(([,i])=>i)])),Q=4;class dt{constructor(t,r,i){S(this,"_body",null),S(this,"_id"),S(this,"_bufferData",null),S(this,"_vertices",[]),S(this,"_vertexColors",[]),S(this,"_vertexNormals",[]),S(this,"_vertexTextureCoords",[]),S(this,"_stripColors",[]),S(this,"_textureAlpha",1),S(this,"_vertexByteSize",0),S(this,"_buffers",[]),S(this,"_bufferLayout",null),S(this,"_topology","triangle-list"),S(this,"_cullMode","back"),S(this,"_material",null),S(this,"_transformation",{rotation:T.identity(),scale:L.fromValues(1,1,1),translation:L.fromValues(0,0,0)}),this._id=t,this._topology=r,this._vertexByteSize=3*4,this._stripColors=i.colors??[[0,0,0,0]],this._textureAlpha=i.textureAlpha??1}get id(){return this._id}get textureAlpha(){return this._textureAlpha}get label(){return this._topology}get translationVector(){return this._transformation.translation??L.fromValues(0,0,0)}get orientationRotation(){return this._transformation.rotation??T.identity()}get scaleVector(){return this._transformation.scale??L.fromValues(1,1,1)}get hasTextures(){return this._vertexTextureCoords.length>0&&this._material!==null}get material(){return this._material}get vertexShader(){return this._topology==="triangle-strip"||this._topology==="triangle-list"?this.hasTextures?"vertexTextureShader":"vertexColorShader":"vertexLineShader"}get fragmentShader(){return this._topology==="triangle-strip"||this._topology==="triangle-list"?this.hasTextures?"fragmentTextureShader":"fragmentColorShader":"fragmentLineShader"}get colors(){return this._stripColors}get primitives(){return this._topology}get cullMode(){return this._topology==="triangle-strip"||this._topology==="triangle-list"?this._cullMode:"none"}get vertexCount(){return this._vertices.reduce((t,r)=>t+r.length/3,0)}get body(){return this._body}get transformation(){return w.fromRotationTranslationScale(this._transformation.rotation??T.identity(),this._transformation.translation??L.fromValues(0,0,0),this._transformation.scale??L.fromValues(1,1,1))}get transformationData(){const t=this.transformation;return new Float32Array([...t.values,...t.transpose().invert().values])}setMaterial(t){this._material=t}setBody(t){return this._body=t,this}scale(t){return this._transformation.scale=this.scaleVector.multiply(t),this}translate(t){return this._transformation.translation=this.translationVector.add(t),this}rotate(t){return this._transformation.rotation=this.orientationRotation.compose(t),this}rotoTranslate(t,r){const i=this._transformation;return i.rotation=t,i.translation=r,this}transform(t,r){return this._transformation=r(t,this._transformation),this}getVertexCountPerStrip(t){return this._vertices[t].length/3}get vertexByteSize(){return this._vertexByteSize}getByteSizePerStrip(t=0){return this._vertices[t].length*Q+(this._vertexColors.length>0?this._vertexColors[t].length*Q:0)+(this._vertexNormals.length>0?this._vertexNormals[t].length*Q:0)+(this._vertexTextureCoords.length>0?this._vertexTextureCoords[t].length*Q:0)}setCullMode(t){return this._cullMode=t,this}addVertices(t){this._vertices.push(t)}getBufferData(){return this._bufferData!==null?this._bufferData:(this._bufferData=this._vertices.map((t,r)=>{const i=[];for(let o=0,n=0,s=0,a=0;o<t.length;o+=3,n+=4,s+=3,a+=2){const c=[t[o+0],t[o+1],t[o+2]];this._vertexColors.length>r&&(c.push(this._vertexColors[r][n+0]),c.push(this._vertexColors[r][n+1]),c.push(this._vertexColors[r][n+2]),c.push(this._vertexColors[r][n+3])),this._vertexTextureCoords.length>r&&(c.push(this._vertexTextureCoords[r][a+0]),c.push(this._vertexTextureCoords[r][a+1])),this._vertexNormals.length>r&&(c.push(this._vertexNormals[r][s+0]),c.push(this._vertexNormals[r][s+1]),c.push(this._vertexNormals[r][s+2])),i.push(...c)}return new Float32Array(i)}),this._bufferData)}get layouts(){let t=0,r=0;const i=[{shaderLocation:t,offset:0,format:"float32x3"}];return t+=1,r+=3*Q,this._vertexColors.length>0&&(i.push({shaderLocation:t,offset:r,format:"float32x4"}),t+=1,r+=4*Q),this._vertexTextureCoords.length>0&&(i.push({shaderLocation:t,offset:r,format:"float32x2"}),t+=1,r+=2*Q),this._vertexNormals.length>0&&(i.push({shaderLocation:t,offset:r,format:"float32x3"}),t+=1,r+=3*Q),i}get buffers(){return this._buffers}get bufferLayout(){if(this._bufferLayout===null)throw new Error("TriangleData: Buffer layout is not available! - Did you call buildGpuBuffer() ?");return this._bufferLayout}buildGpuBuffer(t){this._buffers=this.getBufferData().map(r=>Me(t.device,r)),this._bufferLayout={arrayStride:this.vertexByteSize,attributes:this.layouts}}addColors(t){this._vertexColors.length===0&&(this._vertexByteSize+=4*4),this._vertexColors.push(t)}addNormals(t){var r;this._vertexNormals.length===0&&(this._vertexByteSize+=3*4),(r=this._vertexNormals)==null||r.push(t)}addTextures(t){this._vertexTextureCoords.length===0&&(this._vertexByteSize+=2*4),this._vertexTextureCoords.push(t)}}const et=(e,t,r)=>{const{w:i,h:o}=t,n=i/2,s=o/2,a=e.origin,c=[],l=[],u=V.fromValues(0,0,1);c.push(_.fromValues(a.x-n,a.y-s,0)),c.push(_.fromValues(a.x+n,a.y-s,0)),c.push(_.fromValues(a.x-n,a.y+s,0)),c.push(_.fromValues(a.x-n,a.y+s,0)),c.push(_.fromValues(a.x+n,a.y-s,0)),c.push(_.fromValues(a.x+n,a.y+s,0)),l.push(u,u,u,u,u,u);const h=[],{pos:d,size:p}=r,{w:m,h:f}=p,v=m/2,x=f/2;h.push({u:d.u+v,v:d.v-x}),h.push({u:d.u-v,v:d.v-x}),h.push({u:d.u+v,v:d.v+x}),h.push({u:d.u+v,v:d.v+x}),h.push({u:d.u-v,v:d.v-x}),h.push({u:d.u-v,v:d.v+x});const P=c.map(g=>g.absolute(e)),y=l.map(g=>g.absolute(e));return[P,y,h]},rt=(e,t)=>[e[0].map(r=>r.map(t).triplet).flat(),e[1].map(r=>r.map(t).triplet).flat(),e[2].map(r=>[r.u,r.v]).flat()],Ze=(e,t)=>{const{id:r,textureCoordinates:i}=t,o=w.rotationX(q(-90)),n=w.rotationX(q(180)),s=w.rotationX(q(90)),a=w.rotationZ(q(-90)).rotationY(q(90)),c=w.rotationZ(q(90)).rotationY(q(-90)),l=xt.from2Vectors(_.fromValues(0,0,.5),V.fromValues(0,0,1),V.fromValues(1,0,0)),u=l.map(n),h=l.map(o),d=l.map(s),p=l.map(a),m=l.map(c),f={w:.25,h:.25},v=et(l,{w:1,h:1},{pos:{u:.25+.25/2,v:.25/2},size:f}),x=et(u,{w:1,h:1},{pos:{u:.25+.25/2,v:.5+.25/2},size:f}),P=et(h,{w:1,h:1},{pos:{u:.25+.25/2,v:.25+.25/2},size:f}),y=et(d,{w:1,h:1},{pos:{u:.75+.25/2,v:.25+.25/2},size:f}),g=et(p,{w:1,h:1},{pos:{u:0+.25/2,v:.25+.25/2},size:f}),b=et(m,{w:1,h:1},{pos:{u:.5+.25/2,v:.25+.25/2},size:f}),[M,G,F]=rt(v,e),R=rt(x,e),N=rt(P,e),O=rt(y,e),Z=rt(g,e),$=rt(b,e);M.push(...R[0],...N[0],...O[0],...Z[0],...$[0]),G.push(...R[1],...N[1],...O[1],...Z[1],...$[1]),F.push(...R[2],...N[2],...O[2],...Z[2],...$[2]);const C=new dt(r,"triangle-list",t);return C.addVertices(new Float32Array(M)),C.addNormals(new Float32Array(G)),i&&C.addTextures(new Float32Array(F)),C},$e=()=>Ze,Ct=(e,t,r)=>{const i=V.fromValues(0,0,1),o=V.fromValues(0,0,-1),n=[],s=[],a=r==="up"?0:Math.PI*2,c=r==="up"?Math.PI/e:-Math.PI/e,l=r==="up"?u=>u<Math.PI*2:u=>u>0;for(let u=a;l(u);u+=c){const h=_.fromValues(0,0,t),d=_.fromValues(.5*Math.cos(u),.5*Math.sin(u),t),p=_.fromValues(.5*Math.cos(u+c),.5*Math.sin(u+c),t);s.push(h),s.push(d),s.push(p),r==="up"?n.push(i,i,i):n.push(o,o,o)}return[s,n]},ke=(e,t,r)=>{const i=[],o=[],n=Math.PI/e,s=_.fromValues(0,0,t),a=_.fromValues(0,0,r);for(let c=0;c<Math.PI*2;c+=n){const l=_.fromValues(.5*Math.cos(c),.5*Math.sin(c),t),u=V.fromPoints(l,s);i.push(l),o.push(u);const h=_.fromValues(.5*Math.cos(c+n),.5*Math.sin(c+n),t),d=V.fromPoints(h,s);i.push(h),o.push(d);const p=_.fromValues(.5*Math.cos(c),.5*Math.sin(c),r),m=V.fromPoints(p,a);i.push(p),o.push(m);const f=_.fromValues(.5*Math.cos(c),.5*Math.sin(c),r),v=V.fromPoints(f,a);i.push(f),o.push(v);const x=_.fromValues(.5*Math.cos(c+n),.5*Math.sin(c+n),t),P=V.fromPoints(x,s);i.push(x),o.push(P);const y=_.fromValues(.5*Math.cos(c+n),.5*Math.sin(c+n),r),g=V.fromPoints(y,a);i.push(y),o.push(g)}return[i,o]},qe=(e,t)=>{const{steps:r,id:i,textureCoordinates:o}=t,n=[],s=[],a=[],[c,l]=Ct(r,.5,"up"),[u,h]=Ct(r,-.5,"down"),[d,p]=ke(r,-.5,.5);if(n.push(...c.map(f=>f.map(e))),n.push(...u.map(f=>f.map(e))),n.push(...d.map(f=>f.map(e))),o){let f=0,v=0;const x=c.map(g=>[g.x+.5,g.y+.5]),P=u.map(g=>[g.x+.5,g.y+.5]),y=d.map(g=>{const b=g.z+.5;let M=(Math.atan2(g.y,g.x)+Math.PI)/(2*Math.PI);return M<Math.min(f,v)&&(M+=1),v=f,f=M,[M,b]});a.push(...x),a.push(...P),a.push(...y)}s.push(...l.map(f=>f.map(e))),s.push(...h.map(f=>f.map(e))),s.push(...p.map(f=>f.map(e)));const m=new dt(i,"triangle-list",t);return m.addVertices(new Float32Array(n.map(f=>f.triplet).flat())),m.addNormals(new Float32Array(s.map(f=>f.triplet).flat())),o&&m.addTextures(new Float32Array(a.flat())),m},He=()=>qe,U=.5257311121191336,D=.8506508083520399,Ye=[V.fromValues(-U,0,D),V.fromValues(U,0,D),V.fromValues(-U,0,-D),V.fromValues(U,0,-D),V.fromValues(0,D,U),V.fromValues(0,D,-U),V.fromValues(0,-D,U),V.fromValues(0,-D,-U),V.fromValues(D,U,0),V.fromValues(-D,U,0),V.fromValues(D,-U,0),V.fromValues(-D,-U,0)],je=[[0,4,1],[0,9,4],[9,5,4],[4,5,8],[4,8,1],[8,10,1],[8,3,10],[5,3,8],[5,2,3],[2,7,3],[7,10,3],[7,6,10],[7,11,6],[11,0,6],[0,1,6],[6,1,10],[9,0,11],[9,11,2],[9,2,5],[7,2,11]];function Xe(e,t){return V.fromVector(e.add(t))}function Zt(e,t,r=1){const i=new Map,o=[];function n(s,a){const c=s<a,l=`${c?s:a}-${c?a:s}`,u=i.get(l);if(u)return u;const h=Xe(L.fromValues(...e[s].triplet),L.fromValues(...e[a].triplet));e.push(h);const d=e.length-1;return i.set(l,d),d}for(const[s,a,c]of t){const l=n(s,a),u=n(s,c),h=n(a,c);o.push([s,l,u]),o.push([a,h,l]),o.push([c,u,h]),o.push([l,h,u])}return r===1?[e,o]:Zt(e,o,r-1)}const pt=e=>{let t=Math.asin(e.z);return[(Math.atan2(e.y,e.x)+Math.PI)/(2*Math.PI),.5-t/Math.PI]},We=(e,t)=>{const{steps:r,id:i,textureCoordinates:o}=t,[n,s]=Zt(Ye,je,r),a=[],c=[],l=[],u=_.fromValues(0,0,0);s.forEach(d=>{const p=_.fromVector(n[d[2]]),m=_.fromVector(n[d[1]]),f=_.fromVector(n[d[0]]),v=V.fromVector(L.fromPoints(p,u)),x=V.fromVector(L.fromPoints(m,u)),P=V.fromVector(L.fromPoints(f,u));if(a.push(...p.map(e).triplet),a.push(...m.map(e).triplet),a.push(...f.map(e).triplet),c.push(...v.triplet),c.push(...x.triplet),c.push(...P.triplet),o){const y=pt(v),g=pt(x),b=pt(P),M=Math.min(y[0],g[0],b[0]),G=Math.max(y[0],g[0],b[0]);Math.abs(G-M)>.8&&(y[0]<.4&&g[0]<.4?b[0]-=1:y[0]<.4&&b[0]<.4?g[0]-=1:g[0]<.4&&b[0]<.4?y[0]-=1:y[0]>.6&&g[0]>.6?b[0]+=1:y[0]>.6&&b[0]>.6?g[0]+=1:g[0]>.6&&b[0]>.6&&(y[0]+=1)),l.push(...y),l.push(...g),l.push(...b)}});const h=new dt(i,"triangle-list",t);return h.addVertices(new Float32Array(a)),h.addNormals(new Float32Array(c)),o&&h.addTextures(new Float32Array(l)),h},Ke=()=>We,Qe=(e,t)=>{var r;const{id:i}=t,o=e.scaleVector,n=Math.min(o.x,o.y),s=Math.log10(n),a=1-(s-Math.floor(s)),c=1-a,l=Math.floor(s)-1,u=Math.floor(s),h=Math.pow(10,Math.round(l)),d=Math.pow(10,Math.round(u))/2;console.log("main tileDim",h," on a size of:",n,"with alpha",a),console.log("next tileDim",d," on a size of:",n,"with alpha",c);const p=o.x/h,m=o.y/h,f=1/p,v=1/m,x=o.x/d,P=o.y/d,y=1/x,g=1/P,b=Lt(p,m,f,v,e),M=Lt(x,P,y,g,e),G=new dt(i,"line-list",t);if(t.showAxes){const F=[],R=_.fromValues(-.5,0,0).map(e),N=_.fromValues(.5,0,0).map(e),O=_.fromValues(0,-.5,0).map(e),Z=_.fromValues(0,.5,0).map(e),$=_.fromValues(0,0,0).map(e),C=_.fromValues(0,0,h);F.push(R,N,O,Z,$,C);const kt=[[1,0,0,1],[1,0,0,1],[0,1,0,1],[0,1,0,1],[.1,.1,1,1],[.1,.1,1,1]];G.addVertices(new Float32Array(F.flatMap(qt=>qt.triplet))),G.addColors(new Float32Array(kt.flat()))}return G.addVertices(new Float32Array(M.flatMap(F=>F.triplet))),G.addColors(new Float32Array(zt(M,c))),G.addVertices(new Float32Array(b.flatMap(F=>F.triplet))),G.addColors(new Float32Array(zt(b,a,(r=t.colors)==null?void 0:r[0]))),G},Je=()=>Qe,Lt=(e,t,r,i,o)=>{const n=[];for(let s=0;s<e/2;s++){const a=_.fromValues(-r*s,-.5,0).map(o),c=_.fromValues(-r*s,.5,0).map(o);if(n.push(a,c),r*(s+1)<.5){const l=_.fromValues(r*(s+1),-.5,0).map(o),u=_.fromValues(r*(s+1),.5,0).map(o);n.push(l,u)}}for(let s=0;s<t/2;s++){const a=_.fromValues(-.5,-i*s,0).map(o),c=_.fromValues(.5,-i*s,0).map(o);if(n.push(a,c),i*(s+1)<.5){const l=_.fromValues(-.5,i*(s+1),0).map(o),u=_.fromValues(.5,i*(s+1),0).map(o);n.push(l,u)}}return n};function zt(e,t,r){return e.flatMap(()=>r?[r[0],r[1],r[2],t]:[.6,.6,.6,t])}const tr=(e,t=[10,10,10])=>{let r=_.fromValues(0,0,0),i=_.fromValues(...t),o=i.x===0&&i.y===0?V.fromValues(0,1,0):V.fromValues(0,0,1),n=[0,0],s=[0,0],a=0,c=0,l=Math.PI/5,u=L.fromPoints(i,r).lengthSquare,h=xt.lookAt(i,r,o),d=!1;return[{move:(p,m,f)=>{const v=Math.min(e.canvas.width,e.canvas.height),x=Math.max(e.canvas.width,e.canvas.height);let P=Math.log(u)*Math.atan(l)/(x/2),y=l/v*2;switch(p){case"mouse-0":n=[m.direction[0]*P,m.direction[1]*P],d=!0;break;case"mouse-1":s=[-m.direction[0]*y,m.direction[1]*y];break;case"mouse-2":l+=m.direction[1]*y;break;case"none":d=!1;break}},zoom:p=>{const m=Math.log10(u+1)/(1e3*Math.atan(l));a=p*m},tilt:p=>{c=p*5e-4,d=!1}},{view:p=>{if(!p||p!=null&&p.isIdentity)return w.lookAt(i,r,o);const m=L.fromPoints(i,r).scale(1-a);m.length>2&&m.length<500&&(i=r.add(m));const f=L.fromPoints(r,i),v=w.move(f).apply(h),x=[Math.tan(s[0])*u,Math.tan(s[1])*u],P=L.fromValues(x[0],x[1],0).absolute(v),y=v.relative(i);let g=v.relative(o);g=w.rotationZ(c).apply(g);const b=w.rotationX(-n[1]).compose(w.rotationY(-n[0]));i=b.apply(y).absolute(v),o=b.apply(g).absolute(v);const M=w.move(P);return r=M.apply(r),i=M.apply(i),h=xt.lookAt(i,r,o),d||(n=[n[0]*.95,n[1]*.95],c*=.9,a*=.9,Math.abs(n[0])<.001&&Math.abs(n[1])<.001&&Math.abs(c)<.001&&Math.abs(a)<.001&&(n=[0,0],c=0,a=0)),s=[0,0],u=L.fromPoints(i,r).length,h.toTransform()},projection:p=>{const m=e.canvas.width/e.canvas.height,f=L.fromPoints(i,r).length,v=Math.max(400,f*.8);return w.perspective(l,m,Math.max(.01,f-v),f+v)}}]},er=e=>{const t=-q(18),r=_.fromValues(8,0,1),i=_.fromValues(-6,0,-2);e.setAmbientLight([.1,.1,.1,1]);const o=V.fromVector(_.origin().subtract(r));return e.setLight("directional",0,{dir:o,col:[.6,.6,.6,1]}),e.setLight("point",0,{pos:r,col:[.8,.8,.8,1]}),e.setLight("point",1,{pos:i,col:[.1,.1,.5,1]}),{dirLights:(n,s)=>{const a=n/1e3,c=w.rotationZ(t*a);s[0].dir=s[0].dir.map(c)},posLights:(n,s)=>{const a=n/1e3,c=w.rotationZ(t*a),l=w.rotationZ(t*a*1.2);s[0].pos=s[0].pos.map(c),s[1].pos=s[1].pos.map(l)}}};let X=0;const rr=e=>({"earth-sphere":t=>{const r=t/1e3;return X+=r*q(360/180),{rotation:T.rotationZ(X)}},cylinder:t=>{const r=t/1e3;return X+=r*q(360/20),{rotation:T.rotationZ(X).compose(T.rotationY(X))}},cube:t=>{const r=t/1e3;return X+=r*q(360/10),{rotation:T.rotationZ(X).compose(T.rotationY(X)).compose(T.rotationZ(X))}}}),ir=e=>{const t=Ke()(w.scale(1.5,1.5,1.5),{id:"earth-sphere",steps:4,colors:[[.5,.5,.5,1]],textureCoordinates:!0});return t.setMaterial(e),[t]},or=e=>{const t=He()(w.scale(2,2,2),{id:"cylinder",steps:24,colors:[[1,0,0,1]],textureCoordinates:!0});return t.setMaterial(e),[t]},nr=e=>{const t=$e()(w.scale(2,2,2),{id:"cube",textureCoordinates:!0});return t.setMaterial(e),[t]},$t=()=>[Je()(w.scale(40,40,1).translation(0,0,0),{id:"ref-plane",colors:[[.4,.3,.4,.9]]})];async function sr(e,t){const r=await De(e);await r.setupShaders("standard-3d");const[i,o]=tr(r,[6,6,4]);r.captureMouseMotion(i);const n=er(r),s=rr();r.beginRenderLoop({camera:o,lights:n,models:s});const a=await $t();return r.setScene(a),r}const lt=[],ar=(e,t)=>()=>{console.log("setWireframe",t.checked),t.checked?e.setPipelineMode("alternative"):e.setPipelineMode("default")},vt=(e,t)=>()=>{e.clearScene();const r=$t();switch(t){case"globe":const i=ir(lt[0]);e.setScene([...i,...r]);break;case"cylinder":const o=or(lt[1]);e.setScene([...o,...r]);break;case"cube":const n=nr(lt[2]);e.setScene([...r,...n]);break}},mt=document.getElementById("support"),Gt=document.getElementById("gfx-canvas");!mt||!Gt?alert("The app is broken! No canvas was found!"):sr(Gt).then(e=>Oe(e,["earth.jpg","metal2.jpg","dice.png"])).then(([e,t])=>{lt.push(...t);const r=document.getElementById("wireframe");r.onclick=ar(e,r);const i=document.getElementById("geo-globe"),o=document.getElementById("geo-cylinder"),n=document.getElementById("geo-cube");i.onclick=vt(e,"globe"),o.onclick=vt(e,"cylinder"),n.onclick=vt(e,"cube"),i.click(),mt.innerText="All set!"}).catch(e=>{mt.innerText="Error: "+e.message});
